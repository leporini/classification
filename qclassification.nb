(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    374000,       7972]
NotebookOptionsPosition[    372380,       7937]
NotebookOutlinePosition[    372753,       7953]
CellTagsIndexPosition[    372710,       7950]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"SetEnvironment", "[", 
  RowBox[{"\"\<PATH\>\"", "\[Rule]", 
   RowBox[{
    RowBox[{"Environment", "[", "\"\<PATH\>\"", "]"}], "<>", "\"\<;\>\"", 
    "<>", "\"\<C:\\\\ProgramData\\\\Anaconda3\>\""}]}], "]"}], "\n", 
 RowBox[{"SetEnvironment", "[", 
  RowBox[{"\"\<PATH\>\"", "\[Rule]", 
   RowBox[{
    RowBox[{"Environment", "[", "\"\<PATH\>\"", "]"}], "<>", "\"\<;\>\"", 
    "<>", "\"\<C:\\\\ProgramData\\\\Anaconda3\\\\Library\\\\bin\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"RegisterExternalEvaluator", "[", 
  RowBox[{
  "\"\<Python\>\"", ",", "\"\<C:\\\\ProgramData\\Anaconda3\\python.exe\>\""}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartExternalSession", "[", "\"\<Python\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8394781786190023`*^9, 3.839478226768483*^9}, {
  3.839980816501132*^9, 3.8399808374812746`*^9}, {3.839980871179731*^9, 
  3.839980888293765*^9}, {3.8399809273085413`*^9, 3.839980928316642*^9}, {
  3.839983358557334*^9, 3.8399833722128973`*^9}, {3.8439843772542715`*^9, 
  3.8439843779487267`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"273655d8-8287-4ae9-8f2c-72f063a24896"],

Cell[BoxData["\<\"252c4db6-2e82-4a4e-b821-12d45585ac2b\"\>"], "Output",
 CellChangeTimes->{3.8394781801620936`*^9, 3.8394782294347153`*^9, 
  3.83998074254906*^9, 3.8405232213064013`*^9, 3.841057319332223*^9, 
  3.8429436866086445`*^9, 3.8434429093551865`*^9, 3.8435299450202513`*^9, 
  3.8435802277773237`*^9, 3.8437354697474313`*^9, 3.8437818926269283`*^9, 
  3.8438331878721247`*^9, 3.8438551244834113`*^9, 3.8438879126343546`*^9, 
  3.8439269608685436`*^9, 3.84395550539544*^9, 3.8439607547853193`*^9, 
  3.843964145923811*^9, 3.8439781464015026`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"7908cea5-9d7c-44a9-8871-1fa37d96f74f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
import numpy as np
import pandas
import os
from numpy import linalg as LA
from wolframclient.serializers import export
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, Normalizer
from sklearn.datasets import make_moons, make_circles, make_classification
from sklearn.neural_network import MLPClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.svm import SVC
from sklearn.gaussian_process import GaussianProcessClassifier
from sklearn.gaussian_process.kernels import RBF
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis
from pmlb import fetch_data
import warnings
warnings.filterwarnings('ignore')

output_path = r'C:\\Users\\Leporini\\Desktop\\Quantum_inspired_classification'
seeds = [0, 3, 6, 9, 11, 12, 19, 21, 22, 23, 26, 27, 31, 32, 37, 38, 40,\\
 52, 53, 57, 59, 62, 65, 68, 69, 71, 83, 91, 92,\\
 110, 113, 120, 126, 134, 136, 139, 142, 143, 147, 148, 149,\\
 154, 157, 158, 176, 177, 185, 186, 187, 195, 196,\\
 201, 203, 205, 206, 211, 221, 229, 231, 233, 237, 240, 243, 244, 246, 249,\\
 255, 258, 259, 260, 263, 265, 268, 271, 274, 276, 277, 278, 279, 282,\\
 301, 310, 311, 312, 316, 317, 318, 326, 328, 330, 331, 334, 336, 337, 344, \
346, 350,\\
 352, 356, 359]

def Helstrom_score(DX_train, y_train, DX_test, y_test):
    DClass1_test = DX_test[y_test!=0]
    DClass2_test = DX_test[y_test==0]
    DClass1 = DX_train[y_train!=0]
    DClass2 = DX_train[y_train==0]
    p = len(DClass1)/(len(DClass1)+len(DClass2))
    C = np.multiply(sum(DClass1).tolist(),p) + \
np.multiply(sum(DClass2).tolist(),p-1)
    val, vec = LA.eig(C)
    w = np.real(val)
    v = np.transpose(vec/np.linalg.norm(vec))
    prj = np.einsum('li,lj->lij', v, v)
    prj1 = sum(prj[w>=0]).tolist()
    prj2 = sum(prj[w<0]).tolist()
    tr1 = np.trace(np.einsum('ij,ljk->lik',prj1,DClass1_test), axis1=1, \
axis2=2)\\
        - np.trace(np.einsum('ij,ljk->lik',prj2,DClass1_test), axis1=1, \
axis2=2)
    tr2 = np.trace(np.einsum('ij,ljk->lik',prj1,DClass2_test), axis1=1, \
axis2=2)\\
        - np.trace(np.einsum('ij,ljk->lik',prj2,DClass2_test), axis1=1, \
axis2=2)
    acc = (len(tr1[tr1>0])+len(tr2[tr2<=0]))/(len(tr1)+len(tr2))
    return acc;

def Hellinger_dist(r1,u,v):
    dist = \
np.real(np.sqrt(2-np.sqrt(2)*(1+np.sqrt(1-r1**2)+np.einsum('j,j',u,v)) \\
                           / (np.sqrt(1-r1)+np.sqrt(1+r1)))) 
    return dist;

def Hellinger_clf(B,r1,mean1,r2,mean2):
    lst = []
    for b in B:
        lst.append(Hellinger_dist(r1,b,mean1)-Hellinger_dist(r2,b,mean2))
    return np.array(lst);

def Jensen_dist(r1,u,v):
    r12 = np.sqrt(np.einsum('j,j',u+v,u+v))
    dist = np.real((1-r1)*np.log((1-r1)/2)+(1+r1)*np.log((1+r1)/2) \\
                  -(2-r12)*np.log((2-r12)/4)-(2+r12)*np.log((2+r12)/4))/4 
    return dist;

def Jensen_clf(B,r1,mean1,r2,mean2):
    lst = []
    for b in B:
        lst.append(Jensen_dist(r1,b,mean1)-Jensen_dist(r2,b,mean2))
    return np.array(lst);

clf_names = [\"Nearest Neighbors\", \"Gaussian Process\", \"Linear SVM\", \
\"RBF SVM\",\\
\t\"Neural Net\", \"QDA\", \"Decision Tree\", \"Random Forest\", \
\"AdaBoost\", \"Naive Bayes\"]

classifiers = [
    KNeighborsClassifier(3),
    GaussianProcessClassifier(1.0 * RBF(1.0)),
    SVC(kernel=\"linear\", C=0.025),
    SVC(gamma=2, C=1),
    MLPClassifier(alpha=1, max_iter=1000),
    QuadraticDiscriminantAnalysis(),
    DecisionTreeClassifier(max_depth=5),
    RandomForestClassifier(max_depth=5, n_estimators=10, max_features=1),
    AdaBoostClassifier(),
    GaussianNB()]

ds_names = ['moons','cicles','linearly_separable',
            'analcatdata_aids','analcatdata_asbestos','analcatdata_boxing2',
            # 'analcatdata_boxing1','appendicitis','banana','haberman', \
'titanic'
            'Hill_Valley_with_noise','Hill_Valley_without_noise',
            'lupus','prnn_synth']

X, y = make_classification(n_features=2, n_redundant=0, n_informative=2,
                           random_state=1, n_clusters_per_class=1)
rng = np.random.RandomState(2)
X += 2 * rng.uniform(size=X.shape)
linearly_separable = (X, y)

datasets = [make_moons(noise=0.3, random_state=0),
            make_circles(noise=0.2, factor=0.5, random_state=1),
            linearly_separable]

sigma = np.zeros((3,2,2), dtype=complex)
sigma = [[[0,1],[1,0]],[[0,-1j],[1j,0]],[[1,0],[0,-1]]]

scores = []
for seed in seeds:
    score = []
    for cnt_ds, name in enumerate(ds_names):
        if cnt_ds > 2:
            X, y = fetch_data(name, return_X_y=True)
        else:
            X, y = datasets[cnt_ds]
        X = StandardScaler().fit_transform(X)
        # we only take the first two features.
        X_train, X_test, y_train, y_test = \\
            train_test_split(X[:, :2], y, test_size=.2, random_state=seed)

        clf_scores = []
        for clf in classifiers:
            clf.fit(X_train, y_train)
            clf_scores.append(clf.score(X_test, y_test))    

        # Helstrom
        X_train_ones = np.hstack((X_train,np.ones((X_train.shape[0], 1))))
        trans = Normalizer().fit(X_train_ones)
        X_train_1 = trans.transform(X_train_ones)
        DX_train = np.einsum('li,ijk->ljk',X_train_1,sigma)
        X_test_ones = np.hstack((X_test,np.ones((X_test.shape[0], 1))))
        trans = Normalizer().fit(X_test_ones)
        X_test_1 = trans.transform(X_test_ones)
        DX_test = np.einsum('li,ijk->ljk',X_test_1,sigma)
        clf_scores.append(Helstrom_score(DX_train, y_train, DX_test, y_test))

        # Nearest Centroid (Euclide, Bures, Hellinger, Jensen)
        B1 = X_train_1[y_train!=0]
        B2 = X_train_1[y_train==0]   
        mean1 = np.mean(B1, axis=0)
        mean2 = np.mean(B2, axis=0)
        B1T = X_test_1[y_test!=0]
        B2T = X_test_1[y_test==0]
        tr1 = np.subtract(np.linalg.norm(B1T - mean1, axis=1), \
np.linalg.norm(B1T - mean2, axis=1))
        tr2 = np.subtract(np.linalg.norm(B2T - mean1, axis=1), \
np.linalg.norm(B2T - mean2, axis=1))
        clf_scores.append((len(tr1[tr1<0])+len(tr2[tr2>=0]))/(len(tr1)+len(\
tr2)))

        d=2
        tr1 = \
np.subtract(np.sqrt(2-2*np.sqrt((1+(d-1)*np.einsum('lj,j->l',B1T,mean1))/d)), \
\\
                          np.sqrt(2-2*np.sqrt((1+(d-1)*np.einsum('lj,j->l',\
B1T,mean2))/d)))
        tr2 = \
np.subtract(np.sqrt(2-2*np.sqrt((1+(d-1)*np.einsum('lj,j->l',B2T,mean1))/d)), \
\\
                          np.sqrt(2-2*np.sqrt((1+(d-1)*np.einsum('lj,j->l',\
B2T,mean2))/d)))
        clf_scores.append((len(tr1[tr1<0])+len(tr2[tr2>=0]))/(len(tr1)+len(\
tr2)))

        r1 = np.sqrt(np.einsum('j,j',mean1,mean1))
        r2 = np.sqrt(np.einsum('j,j',mean2,mean2))
        tr1 = Hellinger_clf(B1T,r1,mean1,r2,mean2)
        tr2 = Hellinger_clf(B2T,r1,mean1,r2,mean2)
        clf_scores.append((len(tr1[tr1<0])+len(tr2[tr2>=0]))/(len(tr1)+len(\
tr2)))

        tr1 = Jensen_clf(B1T,r1,mean1,r2,mean2)
        tr2 = Jensen_clf(B2T,r1,mean1,r2,mean2)
        clf_scores.append((len(tr1[tr1<0])+len(tr2[tr2>=0]))/(len(tr1)+len(\
tr2)))

        score.append(clf_scores)
    
    scores.append(score)    

means = np.mean(scores, axis=0)
sds = np.std(scores, axis=0)
pandas.DataFrame(means, ds_names, clf_names +['Helstrom', 'Euclide', 'Bures', \
'Hellinger', 'Jensen'])\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.839512627098118*^9, 3.839512628367496*^9}, 
   3.839513666455797*^9, 3.8395137319035454`*^9, {3.8395141338681498`*^9, 
   3.8395141437911863`*^9}, {3.839980211680853*^9, 3.8399802373148546`*^9}, {
   3.839980500876479*^9, 3.8399805093199615`*^9}, {3.8399805733010745`*^9, 
   3.8399805795226765`*^9}, {3.839980610642082*^9, 3.839980662089384*^9}, {
   3.8399807113841853`*^9, 3.839980715279024*^9}, 3.8399810539405193`*^9, {
   3.8399813073105984`*^9, 3.8399813256529255`*^9}, {3.8399813751105347`*^9, 
   3.839981378504508*^9}, 3.839981433250241*^9, {3.839981488453864*^9, 
   3.8399815076907187`*^9}, {3.839981616628395*^9, 3.839981670097393*^9}, {
   3.8399817083036656`*^9, 3.839981710389139*^9}, {3.8399820253882837`*^9, 
   3.8399820467906027`*^9}, {3.839982140174308*^9, 3.839982163530919*^9}, {
   3.839982232478837*^9, 3.839982241435056*^9}, {3.839986175103321*^9, 
   3.8399861761845446`*^9}, {3.839986316900005*^9, 3.839986318132699*^9}, {
   3.839986472249057*^9, 3.839986531380695*^9}, {3.8399870262398796`*^9, 
   3.839987101248949*^9}, {3.839987161925481*^9, 3.839987168056155*^9}, {
   3.839987547049923*^9, 3.8399875726359563`*^9}, {3.839987604260242*^9, 
   3.8399876357066293`*^9}, {3.8399876658984194`*^9, 3.839987689870824*^9}, {
   3.8399878813280144`*^9, 3.8399879017042923`*^9}, {3.8399879917833343`*^9, 
   3.8399880166922426`*^9}, {3.839988391782036*^9, 3.8399884300104766`*^9}, {
   3.8399884908385377`*^9, 3.839988504873028*^9}, {3.839988614056071*^9, 
   3.8399886469325576`*^9}, 3.83998871410816*^9, {3.839988808618846*^9, 
   3.839988833960127*^9}, {3.839988874153283*^9, 3.839988891752327*^9}, {
   3.8399889282769337`*^9, 3.839988937749827*^9}, {3.839989316293216*^9, 
   3.8399893374516363`*^9}, {3.839989563287918*^9, 3.839989576665024*^9}, {
   3.839989640011797*^9, 3.839990024933773*^9}, {3.8399903131430197`*^9, 
   3.8399903375185366`*^9}, {3.839990444329554*^9, 3.839990475884061*^9}, {
   3.8399912428400965`*^9, 3.839991244843774*^9}, {3.8399914894436803`*^9, 
   3.839991511474344*^9}, {3.839991548755398*^9, 3.8399915862683716`*^9}, {
   3.839992079125643*^9, 3.839992093767511*^9}, {3.839992155047471*^9, 
   3.839992171423936*^9}, {3.8399922090143104`*^9, 3.8399922217000427`*^9}, {
   3.8399922805615435`*^9, 3.8399923643552494`*^9}, 3.8399924068519893`*^9, {
   3.8399924606356273`*^9, 3.8399924638770885`*^9}, {3.839992511327153*^9, 
   3.8399925370524607`*^9}, {3.8399925731495895`*^9, 
   3.8399926104000697`*^9}, {3.839992643446739*^9, 3.8399927369126024`*^9}, {
   3.8399927717323904`*^9, 3.839992776479493*^9}, {3.8399928124241695`*^9, 
   3.8399928443682327`*^9}, {3.839993139326953*^9, 3.8399931451455216`*^9}, {
   3.8399932060702553`*^9, 3.839993240308778*^9}, {3.8399939800815463`*^9, 
   3.8399939965295935`*^9}, 3.839995384729232*^9, {3.8399954387114134`*^9, 
   3.8399954737243915`*^9}, {3.839995547738353*^9, 3.839995577064356*^9}, 
   3.8399957187784934`*^9, 3.839996086366397*^9, {3.839996149775716*^9, 
   3.839996181451039*^9}, {3.8399962154824314`*^9, 3.8399962500380225`*^9}, {
   3.839996300205766*^9, 3.8399963046214466`*^9}, 3.840070929228869*^9, {
   3.8401834073293433`*^9, 3.8401834091738987`*^9}, {3.8401837648208075`*^9, 
   3.84018377209295*^9}, 3.840183838694888*^9, {3.8405229711125546`*^9, 
   3.840522973333027*^9}, {3.8405231997662754`*^9, 3.8405232019975777`*^9}, 
   3.8410561183600054`*^9, {3.8438613686034875`*^9, 3.843861376919752*^9}, {
   3.8439760392819595`*^9, 3.8439760544941874`*^9}, {3.8439815051896963`*^9, 
   3.84398150785631*^9}, {3.8439815616676655`*^9, 3.8439815864667187`*^9}, 
   3.8439816304171314`*^9, {3.843984416231125*^9, 
   3.843984450398689*^9}},ExpressionUUID->"77899e36-27ba-4b5e-aefb-\
28cb1af4791b"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 10, "Length" -> 10, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "Nearest Neighbors", "Gaussian Process", "Linear SVM", "RBF SVM", 
            "Neural Net", "QDA", "Decision Tree", "Random Forest", "AdaBoost",
             "Naive Bayes", "Helstrom", "Euclide", "Bures", "Hellinger", 
            "Jensen"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 10], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[1]} -> 
           1, {All, "Nearest Neighbors"} -> 1, {All, "Gaussian Process"} -> 
           1, {All, "Linear SVM"} -> 1, {All, "RBF SVM"} -> 
           1, {All, "Neural Net"} -> 1, {All, "QDA"} -> 
           1, {All, "Decision Tree"} -> 1, {All, "Random Forest"} -> 
           1, {All, "AdaBoost"} -> 1, {All, "Naive Bayes"} -> 
           1, {All, "Helstrom"} -> 1, {All, "Euclide"} -> 1, {All, "Bures"} -> 
           1, {All, "Hellinger"} -> 1, {All, "Jensen"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[240.00000000000003`], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "Nearest Neighbors" -> TypeSystem`PackageScope`AtomShape[60], 
               "Gaussian Process" -> TypeSystem`PackageScope`AtomShape[60], 
               "Linear SVM" -> TypeSystem`PackageScope`AtomShape[60], 
               "RBF SVM" -> TypeSystem`PackageScope`AtomShape[60], 
               "Neural Net" -> TypeSystem`PackageScope`AtomShape[60], "QDA" -> 
               TypeSystem`PackageScope`AtomShape[60], "Decision Tree" -> 
               TypeSystem`PackageScope`AtomShape[60], "Random Forest" -> 
               TypeSystem`PackageScope`AtomShape[60], "AdaBoost" -> 
               TypeSystem`PackageScope`AtomShape[60], "Naive Bayes" -> 
               TypeSystem`PackageScope`AtomShape[60], "Helstrom" -> 
               TypeSystem`PackageScope`AtomShape[60], "Euclide" -> 
               TypeSystem`PackageScope`AtomShape[60], "Bures" -> 
               TypeSystem`PackageScope`AtomShape[60], "Hellinger" -> 
               TypeSystem`PackageScope`AtomShape[60], "Jensen" -> 
               TypeSystem`PackageScope`AtomShape[60]]]]], 10, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1827146299], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "Nearest Neighbors", "Gaussian Process", "Linear SVM", "RBF SVM", 
            "Neural Net", "QDA", "Decision Tree", "Random Forest", "AdaBoost",
             "Naive Bayes", "Helstrom", "Euclide", "Bures", "Hellinger", 
            "Jensen"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 10], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1827146299]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Nearest Neighbors\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Nearest Neighbors\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    All, "Nearest Neighbors"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[All, "Nearest Neighbors"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Gaussian Process\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Gaussian Process\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    All, "Gaussian Process"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[All, "Gaussian Process"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Linear SVM\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Linear SVM\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    All, "Linear SVM"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[All, "Linear SVM"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"RBF SVM\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"RBF SVM\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    All, "RBF SVM"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[All, "RBF SVM"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Neural Net\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Neural Net\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    All, "Neural Net"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[All, "Neural Net"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"QDA\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"QDA\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    All, "QDA"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[All, "QDA"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Decision Tree\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Decision Tree\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    All, "Decision Tree"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[All, "Decision Tree"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Random Forest\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Random Forest\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    All, "Random Forest"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[All, "Random Forest"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"AdaBoost\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"AdaBoost\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    All, "AdaBoost"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[All, "AdaBoost"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Naive Bayes\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Naive Bayes\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    All, "Naive Bayes"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[All, "Naive Bayes"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Helstrom\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Helstrom\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    All, "Helstrom"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[All, "Helstrom"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Euclide\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Euclide\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    All, "Euclide"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[All, "Euclide"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Bures\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Bures\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    All, "Bures"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[All, "Bures"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Hellinger\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Hellinger\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    All, "Hellinger"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[All, "Hellinger"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Jensen\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Jensen\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    All, "Jensen"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[All, "Jensen"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["moons", 
                    Style[
                    "moons", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    Key["moons"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                   GeneralUtilities`Slice[
                    Key["moons"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.952"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9365"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8325"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.944"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.844"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.834"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.894"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8935"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9135"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8385"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.529"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.842"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8445"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8425"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Hellinger"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.842"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Jensen"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["cicles", 
                    Style[
                    "cicles", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    Key["cicles"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                   GeneralUtilities`Slice[
                    Key["cicles"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.854"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8895"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.4065"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8905"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.873"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.853"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.831"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8455"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8285"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.86"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.4855"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.631"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.509"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.5555"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Hellinger"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.6525"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Jensen"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["linearly_separable", 
                    Style[
                    "linearly_separable", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    Key["linearly_separable"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                   GeneralUtilities`Slice[
                    Key["linearly_separable"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9425"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.93"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9285"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.942"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.94"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.93"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9085"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9145"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8965"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.936"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.929"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.933"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.936"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.935"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Hellinger"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.933"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Jensen"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["analcatdata_aids", 
                    Style[
                    "analcatdata_aids", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    Key["analcatdata_aids"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                   GeneralUtilities`Slice[
                    Key["analcatdata_aids"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.262"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.103"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.386"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.095"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.265"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.252"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.093"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.205"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.279"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.382"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.31"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.312"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.306"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Hellinger"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.308"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Jensen"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["analcatdata_asbestos", 
                    Style[
                    "analcatdata_asbestos", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    Key["analcatdata_asbestos"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                   GeneralUtilities`Slice[
                    Key["analcatdata_asbestos"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.722941"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.744706"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.695294"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.721176"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.746471"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.728824"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.751176"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.758235"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.695294"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.713529"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.606471"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.714706"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.725882"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.720588"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Hellinger"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.714118"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Jensen"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["analcatdata_boxing2", 
                    Style[
                    "analcatdata_boxing2", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    Key["analcatdata_boxing2"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                   GeneralUtilities`Slice[
                    Key["analcatdata_boxing2"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.450741"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.521111"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.532222"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.494444"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.524444"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.528519"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.435556"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.447037"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.455926"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.539259"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.548889"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.524815"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.547778"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.536667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Hellinger"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.531111"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Jensen"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Hill_Valley_with_noise", 
                    Style[
                    "Hill_Valley_with_noise", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    Key["Hill_Valley_with_noise"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                   GeneralUtilities`Slice[
                    Key["Hill_Valley_with_noise"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.497531"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.516872"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.478189"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.517654"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.490494"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.499383"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.515802"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.514815"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.513992"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.489547"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.481317"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.499835"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.502634"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.504938"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Hellinger"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.50465"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Jensen"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Hill_Valley_without_noise", 
                    Style[
                    "Hill_Valley_without_noise", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    Key["Hill_Valley_without_noise"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                   GeneralUtilities`Slice[
                    Key["Hill_Valley_without_noise"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.503909"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.49679"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.492222"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.493868"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.501975"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.513827"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.503251"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.507572"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.518189"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.507942"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.489712"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.514486"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.516049"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.508066"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Hellinger"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.509259"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Jensen"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["lupus", 
                    Style[
                    "lupus", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    Key["lupus"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                   GeneralUtilities`Slice[
                    Key["lupus"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.706111"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.757222"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.756667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.722222"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.753889"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.742778"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.707778"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.722222"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.665556"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.717778"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.773333"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.735"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.733333"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.733333"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Hellinger"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.734444"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Jensen"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["prnn_synth", 
                    Style[
                    "prnn_synth", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][{
                    Key["prnn_synth"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                   GeneralUtilities`Slice[
                    Key["prnn_synth"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.854"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8622"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8362"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.868"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8522"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8424"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8236"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8468"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8298"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8362"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.455"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8566"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.832"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8506"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Hellinger"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8558"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Jensen"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 751925267]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[751925267][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1536., {149.5, 156.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.8399817197859898`*^9, 3.8399821982016253`*^9, 3.8399869845621486`*^9, 
   3.8399871098466883`*^9, 3.8399871747982655`*^9, 3.8399877566328344`*^9, 
   3.839987905840984*^9, 3.839988432308318*^9, 3.839988511597123*^9, {
   3.839988620799416*^9, 3.8399886530750165`*^9}, 3.8399887161468124`*^9, 
   3.8399888357772284`*^9, 3.839988902671872*^9, 3.839988942514801*^9, {
   3.839989318030035*^9, 3.8399893274362*^9}, {3.839989886207797*^9, 
   3.839989909463628*^9}, {3.839989944946359*^9, 3.8399900279348726`*^9}, {
   3.8399903234361444`*^9, 3.839990339911312*^9}, {3.839990453589427*^9, 
   3.839990476850177*^9}, 3.8399912476337643`*^9, 3.839991515580773*^9, {
   3.8399915566769524`*^9, 3.8399915656332245`*^9}, 3.8399921791139264`*^9, 
   3.839992212109435*^9, {3.839992288202219*^9, 3.8399922984139166`*^9}, {
   3.8399923322503023`*^9, 3.8399923649427123`*^9}, 3.8399925440937004`*^9, {
   3.8399925809507933`*^9, 3.8399926122242546`*^9}, {3.839992685158459*^9, 
   3.839992711961652*^9}, 3.839992744933706*^9, {3.8399928143523073`*^9, 
   3.8399928463605595`*^9}, 3.839993148518277*^9, 3.839993226672044*^9, {
   3.8399955403068595`*^9, 3.8399955784370255`*^9}, 3.8399959900413585`*^9, 
   3.839996435432477*^9, {3.8405232101228223`*^9, 3.8405232395290318`*^9}, 
   3.8410587607432575`*^9, 3.843862985813446*^9, 3.843977461409128*^9, 
   3.843979957312107*^9, 3.8439835451888943`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"1dff7f8e-559d-4a5e-9b60-ceb7df1c28d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
import numpy as np
import pandas
import os
from numpy import linalg as LA
from wolframclient.serializers import export
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, Normalizer
from sklearn.datasets import make_moons, make_circles, make_classification
from sklearn.neural_network import MLPClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.svm import SVC
from sklearn.gaussian_process import GaussianProcessClassifier
from sklearn.gaussian_process.kernels import RBF
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis
from pmlb import fetch_data
import warnings
warnings.filterwarnings('ignore')

output_path = r'C:\\Users\\Leporini\\Desktop\\Quantum_inspired_classification'
seeds = [0, 3, 6, 9, 11, 12, 19, 21, 22, 23, 26, 27, 31, 32, 37, 38, 40,\\
 52, 53, 57, 59, 62, 65, 68, 69, 71, 83, 91, 92,\\
 110, 113, 120, 126, 134, 136, 139, 142, 143, 147, 148, 149,\\
 154, 157, 158, 176, 177, 185, 186, 187, 195, 196,\\
 201, 203, 205, 206, 211, 221, 229, 231, 233, 237, 240, 243, 244, 246, 249,\\
 255, 258, 259, 260, 263, 265, 268, 271, 274, 276, 277, 278, 279, 282,\\
 301, 310, 311, 312, 316, 317, 318, 326, 328, 330, 331, 334, 336, 337, 344, \
346, 350,\\
 352, 356, 359]

def Helstrom_score(DX_train, y_train, DX_test, y_test):
    DClass1_test = DX_test[y_test!=0]
    DClass2_test = DX_test[y_test==0]
    DClass1 = DX_train[y_train!=0]
    DClass2 = DX_train[y_train==0]
    p = len(DClass1)/(len(DClass1)+len(DClass2))
    C = np.multiply(sum(DClass1).tolist(),p) + \
np.multiply(sum(DClass2).tolist(),p-1)
    val, vec = LA.eig(C)
    w = np.real(val)
    v = np.transpose(vec/np.linalg.norm(vec))
    prj = np.einsum('li,lj->lij', v, v)
    prj1 = sum(prj[w>=0]).tolist()
    prj2 = sum(prj[w<0]).tolist()
    tr1 = np.trace(np.einsum('ij,ljk->lik',prj1,DClass1_test), axis1=1, \
axis2=2)\\
        - np.trace(np.einsum('ij,ljk->lik',prj2,DClass1_test), axis1=1, \
axis2=2)
    tr2 = np.trace(np.einsum('ij,ljk->lik',prj1,DClass2_test), axis1=1, \
axis2=2)\\
        - np.trace(np.einsum('ij,ljk->lik',prj2,DClass2_test), axis1=1, \
axis2=2)
    acc = (len(tr1[tr1>0])+len(tr2[tr2<=0]))/(len(tr1)+len(tr2))
    return acc;

def x_phi(X,n):
\tlst = []
\tif n == 1:
\t\tfor v in X:
\t\t\tlst.append([2*v[0]*v[1],2*v[0],2*v[1],v[0]**2-v[1]**2,(-2+v[0]**2+v[1]**\
2)/np.sqrt(3)]/(1+v[0]**2+v[1]**2))
\telif n == 2:
\t\tfor v in X:
\t\t\tlst.append([2*v[0]**3*v[1],2*v[0]**3,2*v[0]**2*v[1]**2,2*v[0]**2*v[1],2*\
v[0]**2,2*v[0]*v[1]**3,2*v[0]*v[1]**2, \\
\t\t\t2*v[0]*v[1],2*v[0],2*v[1]**3,2*v[1]**2,2*v[1],v[0]**4-v[0]**2*v[1]**2,(\
v[0]**2*(-2+v[0]**2+v[1]**2))/np.sqrt(3), \\
\t\t\t(v[0]**2*(1+v[0]**2-2*v[1]**2))/np.sqrt(6),(v[0]**4-4*v[1]**4+v[0]**2*(\
1+2*v[1]**2))/np.sqrt(10), \\
\t\t\t(v[0]**4-5*v[1]**2+v[1]**4+v[0]**2*(1+2*v[1]**2))/np.sqrt(15),(v[0]**4+\
v[1]**2+v[1]**4+v[0]**2*(-5+2*v[1]**2))/np.sqrt(21), \\
\t\t\t(v[0]**4-6*v[1]**2+v[1]**4+2*v[0]**2*(1+v[1]**2))/(2*np.sqrt(7)),1/6*(-\
2+v[0]**2+v[1]**2)*(4+v[0]**2+v[1]**2)]/(1+v[0]**2+v[1]**2)**2)
\telif n == 3:
\t\tfor v in X:
\t\t\tlst.append([2*v[0]**5*v[1],2*v[0]**5,2*v[0]**4*v[1]**2,2*v[0]**4*v[1],2*\
v[0]**4,2*v[0]**3*v[1]**3,2*v[0]**3*v[1]**2,2*v[0]**3*v[1],2*v[0]**3,\\
\t\t\t2*v[0]**2*v[1]**4,2*v[0]**2*v[1]**3,2*v[0]**2*v[1]**2,2*v[0]**2*v[1],2*\
v[0]**2,2*v[0]*v[1]**5,2*v[0]*v[1]**4,2*v[0]*v[1]**3,2*v[0]*v[1]**2,\\
\t\t\t2*v[0]*v[1],2*v[0],2*v[1]**5,2*v[1]**4,2*v[1]**3,2*v[1]**2,2*v[1],v[0]**\
6-v[0]**4*v[1]**2,(v[0]**4*(-2+v[0]**2+v[1]**2))/np.sqrt(3),\\
\t\t\t(v[0]**4*(1+v[0]**2-2*v[1]**2))/np.sqrt(6),(v[0]**6-4*v[0]**2*v[1]**4+v[\
0]**4*(1+2*v[1]**2))/np.sqrt(10),\\
\t\t\t(v[0]**2*(v[0]**4-5*v[1]**2+v[1]**4+v[0]**2*(1+2*v[1]**2)))/np.sqrt(15),\
(v[0]**2*(v[0]**4+v[1]**2+v[1]**4+v[0]**2*(-5+2*v[1]**2)))/np.sqrt(21),\\
\t\t\t(v[0]**2*(v[0]**4-6*v[1]**2+v[1]**4+2*v[0]**2*(1+v[1]**2)))/(2*np.sqrt(\
7)),1/6*v[0]**2*(-2+v[0]**2+v[1]**2)*(4+v[0]**2+v[1]**2),\\
\t\t\t(v[0]**2*(v[0]**4+v[0]**2*(2-7*v[1]**2)+(1+v[1]**2)**2))/(3*np.sqrt(5)),\
(v[0]**2*((1+v[0]**2)**2+(2+3*v[0]**2)*v[1]**2-9*v[1]**4))/np.sqrt(55),\\
\t\t\t(v[0]**2*((1+v[0]**2)**2+3*(-3+v[0]**2)*v[1]**2+2*v[1]**4))/np.sqrt(66),\
(v[0]**2*(1+v[0]**2-2*v[1]**2)*(1+v[0]**2+5*v[1]**2))/np.sqrt(78),\\
\t\t\t(v[0]**6-13*v[1]**6+v[0]**4*(2+3*v[1]**2)+v[0]**2*(1+3*(v[1]**2+v[1]**4)\
))/np.sqrt(91),\\
\t\t\t((v[0]+v[0]**3)**2+3*v[0]**2*(1+v[0]**2)*v[1]**2+(-14+3*v[0]**2)*v[1]**\
4+v[1]**6)/np.sqrt(105),\\
\t\t\t((v[0]+v[0]**3)**2+3*v[0]**2*(-4+v[0]**2)*v[1]**2+(1+3*v[0]**2)*v[1]**4+\
v[1]**6)/(2*np.sqrt(30)),\\
\t\t\t((v[0]+v[0]**3)**2+v[0]**2*(4+3*v[0]**2)*v[1]**2+3*(-5+v[0]**2)*v[1]**4+\
v[1]**6)/(2*np.sqrt(34)),\\
\t\t\t((v[0]+v[0]**3)**2+(-17+4*v[0]**2+3*v[0]**4)*v[1]**2+(2+3*v[0]**2)*v[1]*\
*4+v[1]**6)/(3*np.sqrt(17)),\\
\t\t\t(v[0]**6+v[0]**4*(-16+3*v[1]**2)+(v[1]+v[1]**3)**2+v[0]**2*(1+4*v[1]**2+\
3*v[1]**4))/(3*np.sqrt(19)),\\
\t\t\t(v[0]**6+3*v[0]**4*(1+v[1]**2)+(v[1]+v[1]**3)**2+v[0]**2*(1+3*v[1]**2*(-\
5+v[1]**2)))/np.sqrt(190),\\
\t\t\t(v[0]**6+3*v[0]**4*(1+v[1]**2)+(v[1]+v[1]**3)**2+v[0]**2*(-19+5*v[1]**2+\
3*v[1]**4))/np.sqrt(210),\\
\t\t\t(v[0]**6+3*v[0]**4*(1+v[1]**2)+(v[1]+v[1]**3)**2+v[0]**2*(2-16*v[1]**2+\
3*v[1]**4))/np.sqrt(231),\\
\t\t\t(v[0]**6+v[1]**2-20*v[1]**4+v[1]**6+3*v[0]**4*(1+v[1]**2)+v[0]**2*(2+6*\
v[1]**2+3*v[1]**4))/np.sqrt(253),\\
\t\t\t(v[0]**6+3*v[0]**4*(1+v[1]**2)+v[1]**2*(-22+3*v[1]**2+v[1]**4)+v[0]**2*(\
2+6*v[1]**2+3*v[1]**4))/(2*np.sqrt(69)),\\
\t\t\t(v[0]**6+3*v[0]**4*(1+v[1]**2)+v[1]**2*(1+v[1]**2)*(2+v[1]**2)+v[0]**2*(\
-22+6*v[1]**2+3*v[1]**4))/(10*np.sqrt(3)),\\
\t\t\t(v[0]**6+3*v[0]**4*(1+v[1]**2)+3*v[0]**2*(1+v[1]**2)**2+v[1]**2*(-23+3*\
v[1]**2+v[1]**4))/(5*np.sqrt(13)),\\
\t\t\t((-2+v[0]**2+v[1]**2)*(13+v[0]**4+5*v[1]**2+v[1]**4+v[0]**2*(5+2*v[1]**\
2)))/(3*np.sqrt(39))]/(1+v[0]**2+v[1]**2)**3)
\telif n == 4:
\t\tfor v in X:
\t\t\tlst.append([2*v[0]**7*v[1],2*v[0]**7,2*v[0]**6*v[1]**2,2*v[0]**6*v[1],2*\
v[0]**6,2*v[0]**5*v[1]**3,2*v[0]**5*v[1]**2,2*v[0]**5*v[1],\\
\t\t\t2*v[0]**5,2*v[0]**4*v[1]**4,2*v[0]**4*v[1]**3,2*v[0]**4*v[1]**2,2*v[0]**\
4*v[1],2*v[0]**4,2*v[0]**3*v[1]**5,2*v[0]**3*v[1]**4,\\
\t\t\t2*v[0]**3*v[1]**3,2*v[0]**3*v[1]**2,2*v[0]**3*v[1],2*v[0]**3,2*v[0]**2*\
v[1]**6,2*v[0]**2*v[1]**5,2*v[0]**2*v[1]**4,\\
\t\t\t2*v[0]**2*v[1]**3,2*v[0]**2*v[1]**2,2*v[0]**2*v[1],2*v[0]**2,2*v[0]*v[1]\
**7,2*v[0]*v[1]**6,2*v[0]*v[1]**5,2*v[0]*v[1]**4,\\
\t\t\t2*v[0]*v[1]**3,2*v[0]*v[1]**2,2*v[0]*v[1],2*v[0],2*v[1]**7,2*v[1]**6,2*\
v[1]**5,2*v[1]**4,2*v[1]**3,2*v[1]**2,2*v[1],v[0]**8-v[0]**6*v[1]**2,\\
\t\t\t(v[0]**6*(-2+v[0]**2+v[1]**2))/np.sqrt(3),(v[0]**6*(1+v[0]**2-2*v[1]**2)\
)/np.sqrt(6),(v[0]**8-4*v[0]**4*v[1]**4+v[0]**6*(1+2*v[1]**2))/np.sqrt(10),\\
\t\t\t(v[0]**4*(v[0]**4-5*v[1]**2+v[1]**4+v[0]**2*(1+2*v[1]**2)))/np.sqrt(15),\
(v[0]**4*(v[0]**4+v[1]**2+v[1]**4+v[0]**2*(-5+2*v[1]**2)))/np.sqrt(21),\\
\t\t\t(v[0]**4*(v[0]**4-6*v[1]**2+v[1]**4+2*v[0]**2*(1+v[1]**2)))/(2*np.sqrt(\
7)),1/6*v[0]**4*(-2+v[0]**2+v[1]**2)*(4+v[0]**2+v[1]**2),\\
\t\t\t(v[0]**4*(v[0]**4+v[0]**2*(2-7*v[1]**2)+(1+v[1]**2)**2))/(3*np.sqrt(5)),\
(v[0]**4*((1+v[0]**2)**2+(2+3*v[0]**2)*v[1]**2-9*v[1]**4))/np.sqrt(55),\\
\t\t\t(v[0]**4*((1+v[0]**2)**2+3*(-3+v[0]**2)*v[1]**2+2*v[1]**4))/np.sqrt(66),\
(v[0]**4*(1+v[0]**2-2*v[1]**2)*(1+v[0]**2+5*v[1]**2))/np.sqrt(78),\\
\t\t\t(v[0]**8-13*v[0]**2*v[1]**6+v[0]**6*(2+3*v[1]**2)+v[0]**4*(1+3*(v[1]**2+\
v[1]**4)))/np.sqrt(91),\\
\t\t\t(v[0]**2*((v[0]+v[0]**3)**2+3*v[0]**2*(1+v[0]**2)*v[1]**2+(-14+3*v[0]**\
2)*v[1]**4+v[1]**6))/np.sqrt(105),\\
\t\t\t(v[0]**2*((v[0]+v[0]**3)**2+3*v[0]**2*(-4+v[0]**2)*v[1]**2+(1+3*v[0]**2)\
*v[1]**4+v[1]**6))/(2*np.sqrt(30)),\\
\t\t\t(v[0]**2*((v[0]+v[0]**3)**2+v[0]**2*(4+3*v[0]**2)*v[1]**2+3*(-5+v[0]**2)\
*v[1]**4+v[1]**6))/(2*np.sqrt(34)),\\
\t\t\t(v[0]**2*((v[0]+v[0]**3)**2+(-17+4*v[0]**2+3*v[0]**4)*v[1]**2+(2+3*v[0]*\
*2)*v[1]**4+v[1]**6))/(3*np.sqrt(17)),\\
\t\t\t(v[0]**2*(v[0]**6+v[0]**4*(-16+3*v[1]**2)+(v[1]+v[1]**3)**2+v[0]**2*(1+\
4*v[1]**2+3*v[1]**4)))/(3*np.sqrt(19)),\\
\t\t\t(v[0]**2*(v[0]**6+3*v[0]**4*(1+v[1]**2)+(v[1]+v[1]**3)**2+v[0]**2*(1+3*\
v[1]**2*(-5+v[1]**2))))/np.sqrt(190),\\
\t\t\t(v[0]**2*(v[0]**6+3*v[0]**4*(1+v[1]**2)+(v[1]+v[1]**3)**2+v[0]**2*(-19+\
5*v[1]**2+3*v[1]**4)))/np.sqrt(210),\\
\t\t\t(v[0]**2*(v[0]**6+3*v[0]**4*(1+v[1]**2)+(v[1]+v[1]**3)**2+v[0]**2*(2-16*\
v[1]**2+3*v[1]**4)))/np.sqrt(231),\\
\t\t\t(v[0]**2*(v[0]**6+v[1]**2-20*v[1]**4+v[1]**6+3*v[0]**4*(1+v[1]**2)+v[0]*\
*2*(2+6*v[1]**2+3*v[1]**4)))/np.sqrt(253),\\
\t\t\t(v[0]**2*(v[0]**6+3*v[0]**4*(1+v[1]**2)+v[1]**2*(-22+3*v[1]**2+v[1]**4)+\
v[0]**2*(2+6*v[1]**2+3*v[1]**4)))/(2*np.sqrt(69)),\\
\t\t\t(v[0]**2*(v[0]**6+3*v[0]**4*(1+v[1]**2)+v[1]**2*(1+v[1]**2)*(2+v[1]**2)+\
v[0]**2*(-22+6*v[1]**2+3*v[1]**4)))/(10*np.sqrt(3)),\\
\t\t\t(v[0]**2*(v[0]**6+3*v[0]**4*(1+v[1]**2)+3*v[0]**2*(1+v[1]**2)**2+v[1]**\
2*(-23+3*v[1]**2+v[1]**4)))/(5*np.sqrt(13)),\\
\t\t\t(v[0]**2*(-2+v[0]**2+v[1]**2)*(13+v[0]**4+5*v[1]**2+v[1]**4+v[0]**2*(5+\
2*v[1]**2)))/(3*np.sqrt(39)),\\
\t\t\t(v[0]**2*(v[0]**6+v[0]**4*(3-24*v[1]**2)+3*v[0]**2*(1+v[1]**2)**2+(1+v[\
1]**2)**3))/(3*np.sqrt(42)),\\
\t\t\t(v[0]**2*(v[0]**6+(1+v[1]**2)**3+v[0]**4*(3+4*v[1]**2)+v[0]**2*(3+6*v[1]\
**2-25*v[1]**4)))/np.sqrt(406),\\
\t\t\t(v[0]**2*(v[0]**6+(1+v[1]**2)**3+v[0]**4*(3+4*v[1]**2)+v[0]**2*(3-23*v[\
1]**2+4*v[1]**4)))/np.sqrt(435),\\
\t\t\t(v[0]**2*(v[0]**6+(1+v[1]**2)**3+v[0]**4*(3+4*v[1]**2)+v[0]**2*(3+7*v[1]\
**2-26*v[1]**4)))/np.sqrt(465),\\
\t\t\t(v[0]**2*((1+v[0]**2)**3+(3+7*v[0]**2+4*v[0]**4)*v[1]**2+(3+5*v[0]**2)*\
v[1]**4-30*v[1]**6))/(4*np.sqrt(31)),\\
\t\t\t(v[0]**2*((1+v[0]**2)**3+(3+7*v[0]**2+4*v[0]**4)*v[1]**2+(-29+5*v[0]**2)\
*v[1]**4+2*v[1]**6))/(4*np.sqrt(33)),\\
\t\t\t(v[0]**2*((1+v[0]**2)**3+(3-26*v[0]**2+4*v[0]**4)*v[1]**2+(4+5*v[0]**2)*\
v[1]**4+2*v[1]**6))/np.sqrt(561),\\
\t\t\t(v[0]**2*((1+v[0]**2)**3+(3+8*v[0]**2+4*v[0]**4)*v[1]**2+5*(-6+v[0]**2)*\
v[1]**4+2*v[1]**6))/np.sqrt(595),\\
\t\t\t(v[0]**2*((1+v[0]**2)**3+4*(-8+2*v[0]**2+v[0]**4)*v[1]**2+5*(1+v[0]**2)*\
v[1]**4+2*v[1]**6))/(3*np.sqrt(70)),\\
\t\t\t(v[0]**2*((1+v[0]**2)**3+4*(1+v[0]**2)**2*v[1]**2+(5-31*v[0]**2)*v[1]**\
4+2*v[1]**6))/(3*np.sqrt(74)),\\
\t\t\t(v[0]**2*((1+v[0]**2)**3+4*(1+v[0]**2)**2*v[1]**2+(5+6*v[0]**2)*v[1]**4-\
35*v[1]**6))/np.sqrt(703),\\
\t\t\t(v[0]**2*((1+v[0]**2)**3+4*(1+v[0]**2)**2*v[1]**2+3*(-11+2*v[0]**2)*v[1]\
**4+3*v[1]**6))/np.sqrt(741),\\
\t\t\t(v[0]**2*((1+v[0]**2)**3+4*(1+v[0]**2)**2*v[1]**2+6*(1+v[0]**2)*v[1]**4-\
36*v[1]**6))/(2*np.sqrt(195)),\\
\t\t\t(v[0]**2*(1+v[0]**2)**3+4*v[0]**2*(1+v[0]**2)**2*v[1]**2+6*v[0]**2*(1+v[\
0]**2)*v[1]**4+4*v[0]**2*v[1]**6-40*v[1]**8)/(2*np.sqrt(205)),\\
\t\t\t(v[0]**2*(1+v[0]**2)**3+4*v[0]**2*(1+v[0]**2)**2*v[1]**2+6*v[0]**2*(1+v[\
0]**2)*v[1]**4+(-41+4*v[0]**2)*v[1]**6+v[1]**8)/np.sqrt(861),\\
\t\t\t(v[0]**2*(1+v[0]**2)**3+4*v[0]**2*(1+v[0]**2)**2*v[1]**2+6*v[0]**2*(-6+\
v[0]**2)*v[1]**4+(1+4*v[0]**2)*v[1]**6+v[1]**8)/np.sqrt(903),\\
\t\t\t(v[0]**2*(1+v[0]**2)**3+4*v[0]**2*(1+v[0]**2)**2*v[1]**2+v[0]**2*(7+6*v[\
0]**2)*v[1]**4+2*(-21+2*v[0]**2)*v[1]**6+v[1]**8)/np.sqrt(946),\\
\t\t\t(v[0]**2*(1+v[0]**2)**3+4*v[0]**2*(1+v[0]**2)**2*v[1]**2+(-44+7*v[0]**2+\
6*v[0]**4)*v[1]**4+2*(1+2*v[0]**2)*v[1]**6+v[1]**8)/(3*np.sqrt(110)),\\
\t\t\t(v[0]**2*(1+v[0]**2)**3+v[0]**2*(4-37*v[0]**2+4*v[0]**4)*v[1]**2+(1+7*v[\
0]**2+6*v[0]**4)*v[1]**4+2*(1+2*v[0]**2)*v[1]**6+v[1]**8)/(3*np.sqrt(115)),\\
\t\t\t(v[0]**2*(1+v[0]**2)**3+v[0]**2*(4+9*v[0]**2+4*v[0]**4)*v[1]**2+(1-39*v[\
0]**2+6*v[0]**4)*v[1]**4+2*(1+2*v[0]**2)*v[1]**6+v[1]**8)/np.sqrt(1081),\\
\t\t\t(v[0]**2*(1+v[0]**2)**3+v[0]**2*(-43+9*v[0]**2+4*v[0]**4)*v[1]**2+(1+8*\
v[0]**2+6*v[0]**4)*v[1]**4+2*(1+2*v[0]**2)*v[1]**6+v[1]**8)/(2*np.sqrt(282)),\\
\t\t\t(v[0]**2*(1+v[0]**2)**3+v[0]**2*(5+9*v[0]**2+4*v[0]**4)*v[1]**2+(1-40*v[\
0]**2+6*v[0]**4)*v[1]**4+2*(1+2*v[0]**2)*v[1]**6+v[1]**8)/(14*np.sqrt(6)),\\
\t\t\t1/35*(v[0]**2*(1+v[0]**2)**3+v[0]**2*(5+9*v[0]**2+4*v[0]**4)*v[1]**2+(1+\
9*v[0]**2+6*v[0]**4)*v[1]**4+(-47+4*v[0]**2)*v[1]**6+v[1]**8),\\
\t\t\t(v[0]**2*(1+v[0]**2)**3+v[0]**2*(5+9*v[0]**2+4*v[0]**4)*v[1]**2+(-49+9*\
v[0]**2+6*v[0]**4)*v[1]**4+(3+4*v[0]**2)*v[1]**6+v[1]**8)/(5*np.sqrt(51)),\\
\t\t\t(v[0]**2*(1+v[0]**2)**3+v[0]**2*(-46+9*v[0]**2+4*v[0]**4)*v[1]**2+(2+9*\
v[0]**2+6*v[0]**4)*v[1]**4+(3+4*v[0]**2)*v[1]**6+v[1]**8)/np.sqrt(1326),\\
\t\t\t(v[0]**2*(1+v[0]**2)**3+v[0]**2*(6+9*v[0]**2+4*v[0]**4)*v[1]**2+(-50+9*\
v[0]**2+6*v[0]**4)*v[1]**4+(3+4*v[0]**2)*v[1]**6+v[1]**8)/np.sqrt(1378),\\
\t\t\t(v[0]**2*(1+v[0]**2)**3+(-53+6*v[0]**2+9*v[0]**4+4*v[0]**6)*v[1]**2+3*(\
1+3*v[0]**2+2*v[0]**4)*v[1]**4+(3+4*v[0]**2)*v[1]**6+v[1]**8)/(3*np.sqrt(159))\
,\\
\t\t\t(v[0]**8+v[1]**2*(1+v[1]**2)**3+v[0]**6*(-51+4*v[1]**2)+v[0]**2*(1+v[1]*\
*2)**2*(1+4*v[1]**2)+v[0]**4*(3+9*v[1]**2+6*v[1]**4))/(3*np.sqrt(165)),\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+v[1]**2*(1+v[1]**2)**3+v[0]**2*(1+v[1]**\
2)**2*(1+4*v[1]**2)+v[0]**4*(3-46*v[1]**2+6*v[1]**4))/(2*np.sqrt(385)),\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+v[1]**2*(1+v[1]**2)**3+v[0]**2*(1+v[1]**\
2)**2*(1+4*v[1]**2)+v[0]**4*(-53+10*v[1]**2+6*v[1]**4))/(2*np.sqrt(399)),\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+v[1]**2*(1+v[1]**2)**3+v[0]**2*(1+v[1]**\
2)**2*(1+4*v[1]**2)+v[0]**4*(4-47*v[1]**2+6*v[1]**4))/np.sqrt(1653),\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+v[1]**2*(1+v[1]**2)**3+v[0]**4*(4+11*v[1]\
**2+6*v[1]**4)+v[0]**2*(1+6*v[1]**2-49*v[1]**4+4*v[1]**6))/np.sqrt(1711),\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+v[1]**2*(1+v[1]**2)**3+v[0]**4*(4+11*v[1]\
**2+6*v[1]**4)+v[0]**2*(1-53*v[1]**2+10*v[1]**4+4*v[1]**6))/np.sqrt(1770),\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+v[1]**2*(1+v[1]**2)**3+v[0]**2*(1+v[1]**\
2)*(1+6*v[1]**2+4*v[1]**4)+v[0]**4*(-56+11*v[1]**2+6*v[1]**4))/np.sqrt(1830),\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+v[1]**2*(1+v[1]**2)**3+v[0]**4*(1+v[1]**\
2)*(5+6*v[1]**2)+v[0]**2*(1-54*v[1]**2+10*v[1]**4+4*v[1]**6))/np.sqrt(1891),\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+v[1]**2*(1+v[1]**2)**3+v[0]**4*(1+v[1]**\
2)*(5+6*v[1]**2)+v[0]**2*(-61+8*v[1]**2+10*v[1]**4+4*v[1]**6))/(3*np.sqrt(217)\
),\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+v[1]**2*(1+v[1]**2)**3+2*v[0]**2*(1+v[1]*\
*2)**2*(1+2*v[1]**2)+v[0]**4*(5-52*v[1]**2+6*v[1]**4))/(12*np.sqrt(14)),\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+v[1]**2*(1+v[1]**2)**3+v[0]**2*(2+8*v[1]*\
*2-54*v[1]**4+4*v[1]**6)+v[0]**4*(5+6*v[1]**2*(2+v[1]**2)))/(4*np.sqrt(130)),\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+v[1]**2*(1+v[1]**2)**3+v[0]**2*(2-57*v[1]\
**2+11*v[1]**4+4*v[1]**6)+v[0]**4*(5+6*v[1]**2*(2+v[1]**2)))/np.sqrt(2145),\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+v[1]**2*(1+v[1]**2)**3+v[0]**2*(2+9*v[1]*\
*2-55*v[1]**4+4*v[1]**6)+v[0]**4*(5+6*v[1]**2*(2+v[1]**2)))/np.sqrt(2211),\\
\t\t\t((2+v[0]**2)*(v[0]+v[0]**3)**2+v[1]**2+v[0]**2*(3+2*v[0]**2)**2*v[1]**2+\
3*(1+4*v[0]**2+2*v[0]**4)*v[1]**4+4*(-16+v[0]**2)*v[1]**6+v[1]**8)/np.sqrt(\
2278),\\
\t\t\t((2+v[0]**2)*(v[0]+v[0]**3)**2+v[1]**2+v[0]**2*(3+2*v[0]**2)**2*v[1]**2+\
(-65+6*v[0]**2*(2+v[0]**2))*v[1]**4+4*(1+v[0]**2)*v[1]**6+v[1]**8)/np.sqrt(\
2346),\\
\t\t\t((2+v[0]**2)*(v[0]+v[0]**3)**2+(1+4*v[0]**2*(-15+3*v[0]**2+v[0]**4))*v[\
1]**2+2*(2+6*v[0]**2+3*v[0]**4)*v[1]**4+4*(1+v[0]**2)*v[1]**6+v[1]**8)/np.\
sqrt(2415),\\
\t\t\t((2+v[0]**2)*(v[0]+v[0]**3)**2+(1+10*v[0]**2+12*v[0]**4+4*v[0]**6)*v[1]*\
*2+6*(-11+2*v[0]**2+v[0]**4)*v[1]**4+4*(1+v[0]**2)*v[1]**6+v[1]**8)/np.sqrt(\
2485),\\
\t\t\t((2+v[0]**2)*(v[0]+v[0]**3)**2+2*(-35+5*v[0]**2+6*v[0]**4+2*v[0]**6)*v[\
1]**2+(5+6*v[0]**2*(2+v[0]**2))*v[1]**4+4*(1+v[0]**2)*v[1]**6+v[1]**8)/(6*np.\
sqrt(71)),\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+(2+v[1]**2)*(v[1]+v[1]**3)**2+2*v[0]**2*(\
1+5*v[1]**2+6*v[1]**4+2*v[1]**6)+v[0]**4*(-67+6*v[1]**2*(2+v[1]**2)))/(6*np.\
sqrt(73)),\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+6*v[0]**4*(1+v[1]**2)**2+(2+v[1]**2)*(v[\
1]+v[1]**3)**2+v[0]**2*(2-63*v[1]**2+12*v[1]**4+4*v[1]**6))/np.sqrt(2701),\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+6*v[0]**4*(1+v[1]**2)**2+(2+v[1]**2)*(v[\
1]+v[1]**3)**2+v[0]**2*(-72+11*v[1]**2+12*v[1]**4+4*v[1]**6))/(5*np.sqrt(111))\
,\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+6*v[0]**4*(1+v[1]**2)**2+(2+v[1]**2)*(v[\
1]+v[1]**3)**2+v[0]**2*(3+4*v[1]**2*(-16+3*v[1]**2+v[1]**4)))/(5*np.sqrt(114))\
,\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+6*v[0]**4*(1+v[1]**2)**2+v[1]**2*(2-71*v[\
1]**2+4*v[1]**4+v[1]**6)+v[0]**2*(3+4*v[1]**2*(3+3*v[1]**2+v[1]**4)))/np.sqrt(\
2926),\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+6*v[0]**4*(1+v[1]**2)**2+v[1]**2*(-75+6*\
v[1]**2+4*v[1]**4+v[1]**6)+v[0]**2*(3+4*v[1]**2*(3+3*v[1]**2+v[1]**4)))/np.\
sqrt(3003),\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+6*v[0]**4*(1+v[1]**2)**2+v[1]**2*(1+v[1]*\
*2)*(3+3*v[1]**2+v[1]**4)+v[0]**2*(-75+4*v[1]**2*(3+3*v[1]**2+v[1]**4)))/np.\
sqrt(3081),\\
\t\t\t(v[0]**8+4*v[0]**6*(1+v[1]**2)+6*v[0]**4*(1+v[1]**2)**2+4*v[0]**2*(1+v[\
1]**2)**3+v[1]**2*(-76+6*v[1]**2+4*v[1]**4+v[1]**6))/(2*np.sqrt(790)),\\
\t\t\t((-2+v[0]**2+v[1]**2)*(4+v[0]**2+v[1]**2)*(10+v[0]**4+2*v[1]**2+v[1]**4+\
2*v[0]**2*(1+v[1]**2)))/(18*np.sqrt(10))]/(1+v[0]**2+v[1]**2)**4)
\treturn np.array(lst);

clf_names = [\"Nearest Neighbors\", \"Gaussian Process\", \"Linear SVM\", \
\"RBF SVM\", \"Neural Net\", \"QDA\", \"Decision Tree\", \"Random Forest\", \
\"AdaBoost\", \"Naive Bayes\"]

classifiers = [
    KNeighborsClassifier(3),
    GaussianProcessClassifier(1.0 * RBF(1.0)),
    SVC(kernel=\"linear\", C=0.025),
    SVC(gamma=2, C=1),
    MLPClassifier(alpha=1, max_iter=1000),
    QuadraticDiscriminantAnalysis(),
    DecisionTreeClassifier(max_depth=5),
    RandomForestClassifier(max_depth=5, n_estimators=10, max_features=1),
    AdaBoostClassifier(),
    GaussianNB()]

ds_names = ['moons','cicles','linearly_separable',
            'analcatdata_aids','analcatdata_asbestos','analcatdata_boxing2',
            'Hill_Valley_with_noise','Hill_Valley_without_noise',
            'lupus','prnn_synth']

X, y = make_classification(n_features=2, n_redundant=0, n_informative=2,
                           random_state=1, n_clusters_per_class=1)
rng = np.random.RandomState(2)
X += 2 * rng.uniform(size=X.shape)
linearly_separable = (X, y)

datasets = [make_moons(noise=0.3, random_state=0),
            make_circles(noise=0.2, factor=0.5, random_state=1),
            linearly_separable]
n = 1
scores = []
for seed in seeds:
    score = []
    for cnt_ds, name in enumerate(ds_names):
        if cnt_ds > 2:
            X, y = fetch_data(name, return_X_y=True)
        else:
            X, y = datasets[cnt_ds]
        X = StandardScaler().fit_transform(X)
        # we only take the first two features.
        X_train_test = X[:, :2]
        X_train_2, X_test_2, y_train, y_test = \\
            train_test_split(X_train_test, y, test_size=.2, random_state=seed)
        X_train_test = x_phi(X[:, :2],n)
        X_train, X_test, y_train, y_test = \\
            train_test_split(X_train_test, y, test_size=.2, random_state=seed)
        clf_scores = []
        for clf in classifiers:
            clf.fit(X_train, y_train)
            clf_scores.append(clf.score(X_test, y_test))    

        # Helstrom
        X_train_ones = np.hstack((X_train_2,np.ones((X_train_2.shape[0], 1))))
        trans = Normalizer().fit(X_train_ones)
        X_train_1 = trans.transform(X_train_ones)
        X_test_ones = np.hstack((X_test_2,np.ones((X_test_2.shape[0], 1))))
        trans = Normalizer().fit(X_test_ones)
        X_test_1 = trans.transform(X_test_ones)
        X_train_1_n = X_train_1
        X_test_1_n = X_test_1       
        for count in range(1, n):
        \tX_train_1_n = \
np.einsum('li,lj->lij',X_train_1_n,X_train_1).reshape(X_train_1_n.shape[0], -1)
        \tX_test_1_n = \
np.einsum('li,lj->lij',X_test_1_n,X_test_1).reshape(X_test_1_n.shape[0], -1)
        DX_train = np.einsum('li,lj->lij', X_train_1_n, X_train_1_n)
        DX_test = np.einsum('li,lj->lij', X_test_1_n, X_test_1_n)
        clf_scores.append(Helstrom_score(DX_train, y_train, DX_test, y_test))

        # Nearest Centroid (Euclide, Bures)
        B1 = X_train[y_train!=0]
        B2 = X_train[y_train==0]   
        mean1 = np.mean(B1, axis=0)
        mean2 = np.mean(B2, axis=0)
        B1T = X_test[y_test!=0]
        B2T = X_test[y_test==0]
        tr1 = np.subtract(np.linalg.norm(B1T - mean1, axis=1), \
np.linalg.norm(B1T - mean2, axis=1))
        tr2 = np.subtract(np.linalg.norm(B2T - mean1, axis=1), \
np.linalg.norm(B2T - mean2, axis=1))
        clf_scores.append((len(tr1[tr1<0])+len(tr2[tr2>=0]))/(len(tr1)+len(\
tr2)))
        d = 3**n
        tr1 = \
np.subtract(np.sqrt(2-2*np.sqrt((1+(d-1)*np.einsum('lj,j->l',B1T,mean1))/d)), \
\\
                          np.sqrt(2-2*np.sqrt((1+(d-1)*np.einsum('lj,j->l',\
B1T,mean2))/d)))
        tr2 = \
np.subtract(np.sqrt(2-2*np.sqrt((1+(d-1)*np.einsum('lj,j->l',B2T,mean1))/d)), \
\\
                          np.sqrt(2-2*np.sqrt((1+(d-1)*np.einsum('lj,j->l',\
B2T,mean2))/d)))
        clf_scores.append((len(tr1[tr1<0])+len(tr2[tr2>=0]))/(len(tr1)+len(\
tr2)))
        score.append(clf_scores)
    scores.append(score)    

means = np.mean(scores, axis=0)
sds = np.std(scores, axis=0)
pandas.DataFrame(means, ds_names, clf_names +['Helstrom','Euclide','Bures'])\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.8405229916569448`*^9, 3.840523012024588*^9}, {
   3.840548956509633*^9, 3.8405489639478045`*^9}, {3.8405490034705524`*^9, 
   3.840549024958475*^9}, {3.840549165738132*^9, 3.840549172357207*^9}, 
   3.8410566042848916`*^9, {3.8435471675137544`*^9, 3.8435471680588465`*^9}, 
   3.8435472772364035`*^9, {3.843548207626725*^9, 3.8435482425808487`*^9}, {
   3.843548486412608*^9, 3.843548522911361*^9}, {3.8435486041241117`*^9, 
   3.843548619523912*^9}, {3.843548696443281*^9, 3.8435487270990458`*^9}, {
   3.8435492100495777`*^9, 3.8435493183694363`*^9}, {3.8435493648596444`*^9, 
   3.8435493706349993`*^9}, {3.8435503694175663`*^9, 
   3.8435503766944256`*^9}, {3.8435507515203514`*^9, 3.843550857139917*^9}, {
   3.843550940017538*^9, 3.843550963489477*^9}, {3.8435521467296276`*^9, 
   3.843552253639105*^9}, {3.8435526119055395`*^9, 3.8435526394195333`*^9}, {
   3.843552824738979*^9, 3.843553062352701*^9}, {3.8435531097192163`*^9, 
   3.843553139228258*^9}, {3.843553219275365*^9, 3.8435532976097507`*^9}, {
   3.8435533582749844`*^9, 3.843553424908882*^9}, {3.84355359042706*^9, 
   3.843553657206723*^9}, {3.8435537511576867`*^9, 3.843553755195611*^9}, {
   3.843553835797051*^9, 3.8435538553836107`*^9}, {3.8435539136595945`*^9, 
   3.8435539809137564`*^9}, 3.843554049056752*^9, 3.843554134371896*^9, 
   3.8435570606771097`*^9, {3.843560098505005*^9, 3.843560213665062*^9}, {
   3.8435603375105896`*^9, 3.843560344456421*^9}, {3.843560408095867*^9, 
   3.8435604407948785`*^9}, {3.843560524901287*^9, 3.8435605476428685`*^9}, {
   3.8435607084063206`*^9, 3.84356074383574*^9}, 3.843560846406149*^9, {
   3.843563884714391*^9, 3.8435639105677924`*^9}, {3.843563957853747*^9, 
   3.8435639939718857`*^9}, {3.8435641870901747`*^9, 
   3.8435642659776344`*^9}, {3.8435643383234043`*^9, 
   3.8435644074700937`*^9}, {3.843564460317545*^9, 3.843564490365083*^9}, {
   3.84356452740695*^9, 3.8435646281643057`*^9}, {3.8435646628633666`*^9, 
   3.8435646707773285`*^9}, {3.843564782268524*^9, 3.8435648043391128`*^9}, 
   3.843564845254913*^9, 3.843564883947784*^9, {3.843570741352466*^9, 
   3.843570802344274*^9}, 3.843570870422757*^9, {3.8435709046817684`*^9, 
   3.8435710234468236`*^9}, {3.843571058901712*^9, 3.8435710711412115`*^9}, {
   3.8435711439428625`*^9, 3.8435711455060186`*^9}, {3.8435712421695027`*^9, 
   3.8435712560117593`*^9}, {3.8435715764476357`*^9, 3.8435715865055065`*^9}, 
   3.843572265924137*^9, {3.8435750259237785`*^9, 3.8435750313392906`*^9}, {
   3.843575069078189*^9, 3.843575145571365*^9}, 3.843575196503607*^9, 
   3.8435752845896626`*^9, {3.843575354282111*^9, 3.8435754629603567`*^9}, {
   3.8435755374646716`*^9, 3.8435755504604225`*^9}, 3.8435756580204024`*^9, 
   3.843575884806639*^9, {3.8435766221783743`*^9, 3.8435766400425224`*^9}, {
   3.8435773670366526`*^9, 3.843577812398122*^9}, {3.843578021074481*^9, 
   3.843578071756862*^9}, 3.8435781173743486`*^9, {3.8435781833831196`*^9, 
   3.843578193017993*^9}, {3.8437473996147413`*^9, 3.8437474440003443`*^9}, {
   3.8437474808311553`*^9, 3.8437474973444557`*^9}, {3.843748422404111*^9, 
   3.843748422577573*^9}, {3.843750996128251*^9, 3.8437509962813897`*^9}, {
   3.8437538295915937`*^9, 3.843753840973501*^9}, {3.8437562250989714`*^9, 
   3.8437562253820457`*^9}, {3.843781934352767*^9, 3.8437819431474857`*^9}, {
   3.8437847660114365`*^9, 3.8437847662042236`*^9}, {3.843787273097254*^9, 
   3.8437872784201536`*^9}, {3.843789649748573*^9, 3.8437896502253094`*^9}, {
   3.8438332178606963`*^9, 3.8438332185800056`*^9}, {3.8438364994996037`*^9, 
   3.843836500068924*^9}, {3.8438572237450066`*^9, 3.8438572240346346`*^9}, {
   3.8438593821426754`*^9, 3.843859382414613*^9}, {3.8439258171631565`*^9, 
   3.8439258183171053`*^9}, {3.8439258939891634`*^9, 3.8439259176858273`*^9}, 
   3.843925962508914*^9, {3.8439260206952267`*^9, 3.8439260463047237`*^9}, {
   3.8439261031556463`*^9, 3.8439261442806683`*^9}, {3.843929793524641*^9, 
   3.843929865492503*^9}, {3.8439300500549383`*^9, 3.843930149697343*^9}, {
   3.8439547741174955`*^9, 3.8439549913224444`*^9}, {3.8439552042925386`*^9, 
   3.8439552107749395`*^9}, {3.843955256695989*^9, 3.8439552610570545`*^9}, {
   3.843955297418049*^9, 3.8439553081155863`*^9}, {3.8439582562167635`*^9, 
   3.8439582564077187`*^9}, {3.843960716619802*^9, 3.8439607167486897`*^9}, {
   3.8439619107009735`*^9, 3.8439619433015924`*^9}, {3.843962009262748*^9, 
   3.8439620123112392`*^9}, {3.843962386049559*^9, 3.843962395375761*^9}, {
   3.8439625234819384`*^9, 3.8439625282420406`*^9}, {3.8439625584174757`*^9, 
   3.843962562118563*^9}, {3.8439627533154907`*^9, 3.843962758970517*^9}, {
   3.843962790950947*^9, 3.8439627911154523`*^9}, {3.8439637775127587`*^9, 
   3.843963805066081*^9}, {3.84396391686537*^9, 3.843963937683752*^9}, {
   3.84396422405221*^9, 3.8439642258333654`*^9}, {3.843964260951939*^9, 
   3.843964264773263*^9}, {3.843964338270713*^9, 3.8439643384202776`*^9}, {
   3.8439644069806924`*^9, 3.8439644071183243`*^9}, {3.843964588596125*^9, 
   3.843964598094279*^9}, {3.8439647297476735`*^9, 3.8439647328928843`*^9}, {
   3.843964791588002*^9, 3.843964818648821*^9}, 3.8439649449065375`*^9, {
   3.84396768795187*^9, 3.8439676880767155`*^9}, {3.843970050363922*^9, 
   3.843970050516066*^9}, {3.8439742132447147`*^9, 3.84397421343394*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"7cfb8977-197e-4c4b-922a-0b311ac081a5"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 10, "Length" -> 10, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "Nearest Neighbors", "Gaussian Process", "Linear SVM", "RBF SVM", 
            "Neural Net", "QDA", "Decision Tree", "Random Forest", "AdaBoost",
             "Naive Bayes", "Helstrom", "Euclide", "Bures"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 10], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[1]} -> 
           1, {All, "Nearest Neighbors"} -> 1, {All, "Gaussian Process"} -> 
           1, {All, "Linear SVM"} -> 1, {All, "RBF SVM"} -> 
           1, {All, "Neural Net"} -> 1, {All, "QDA"} -> 
           1, {All, "Decision Tree"} -> 1, {All, "Random Forest"} -> 
           1, {All, "AdaBoost"} -> 1, {All, "Naive Bayes"} -> 
           1, {All, "Helstrom"} -> 1, {All, "Euclide"} -> 1, {All, "Bures"} -> 
           1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[240.00000000000003`], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "Nearest Neighbors" -> TypeSystem`PackageScope`AtomShape[60], 
               "Gaussian Process" -> TypeSystem`PackageScope`AtomShape[60], 
               "Linear SVM" -> TypeSystem`PackageScope`AtomShape[60], 
               "RBF SVM" -> TypeSystem`PackageScope`AtomShape[60], 
               "Neural Net" -> TypeSystem`PackageScope`AtomShape[60], "QDA" -> 
               TypeSystem`PackageScope`AtomShape[60], "Decision Tree" -> 
               TypeSystem`PackageScope`AtomShape[60], "Random Forest" -> 
               TypeSystem`PackageScope`AtomShape[60], "AdaBoost" -> 
               TypeSystem`PackageScope`AtomShape[60], "Naive Bayes" -> 
               TypeSystem`PackageScope`AtomShape[60], "Helstrom" -> 
               TypeSystem`PackageScope`AtomShape[60], "Euclide" -> 
               TypeSystem`PackageScope`AtomShape[60], "Bures" -> 
               TypeSystem`PackageScope`AtomShape[60]]]]], 10, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[587481202], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "Nearest Neighbors", "Gaussian Process", "Linear SVM", "RBF SVM", 
            "Neural Net", "QDA", "Decision Tree", "Random Forest", "AdaBoost",
             "Naive Bayes", "Helstrom", "Euclide", "Bures"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 10], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[587481202]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1339771257][{All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Nearest Neighbors\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Nearest Neighbors\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1339771257][{All, "Nearest Neighbors"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[All, "Nearest Neighbors"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Gaussian Process\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Gaussian Process\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1339771257][{All, "Gaussian Process"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[All, "Gaussian Process"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Linear SVM\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Linear SVM\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1339771257][{All, "Linear SVM"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[All, "Linear SVM"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"RBF SVM\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"RBF SVM\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1339771257][{All, "RBF SVM"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[All, "RBF SVM"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Neural Net\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Neural Net\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1339771257][{All, "Neural Net"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[All, "Neural Net"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"QDA\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"QDA\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1339771257][{All, "QDA"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[All, "QDA"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Decision Tree\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Decision Tree\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1339771257][{All, "Decision Tree"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[All, "Decision Tree"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Random Forest\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Random Forest\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1339771257][{All, "Random Forest"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[All, "Random Forest"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"AdaBoost\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"AdaBoost\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1339771257][{All, "AdaBoost"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[All, "AdaBoost"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Naive Bayes\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Naive Bayes\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1339771257][{All, "Naive Bayes"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[All, "Naive Bayes"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Helstrom\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Helstrom\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1339771257][{All, "Helstrom"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[All, "Helstrom"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Euclide\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Euclide\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1339771257][{All, "Euclide"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[All, "Euclide"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Bures\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Bures\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1339771257][{All, "Bures"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[All, "Bures"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["moons", 
                    Style[
                    "moons", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1339771257][{
                    Key["moons"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1339771257][
                   GeneralUtilities`Slice[
                    Key["moons"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9365"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.928"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.7995"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.931"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.908"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9235"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.799"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.847"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.788"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.819"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.761"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8355"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.838"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["moons"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["cicles", 
                    Style[
                    "cicles", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1339771257][{
                    Key["cicles"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1339771257][
                   GeneralUtilities`Slice[
                    Key["cicles"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8315"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8805"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.4635"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.855"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8875"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.872"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.846"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8645"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8565"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8945"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.757"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.805"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.7805"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["cicles"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["linearly_separable", 
                    Style[
                    "linearly_separable", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1339771257][{
                    Key["linearly_separable"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1339771257][
                   GeneralUtilities`Slice[
                    Key["linearly_separable"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.948"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9275"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.921"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.938"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9355"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.938"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9185"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9205"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.905"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.941"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.831"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9325"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.7525"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["linearly_separable"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["analcatdata_aids", 
                    Style[
                    "analcatdata_aids", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1339771257][{
                    Key["analcatdata_aids"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1339771257][
                   GeneralUtilities`Slice[
                    Key["analcatdata_aids"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.172"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.089"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.335"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.099"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.219"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.153"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.091"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.103"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.085"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.214"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.236"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.232"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_aids"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["analcatdata_asbestos", 
                    Style[
                    "analcatdata_asbestos", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1339771257][{
                    Key["analcatdata_asbestos"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1339771257][
                   GeneralUtilities`Slice[
                    Key["analcatdata_asbestos"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.724118"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.738235"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.612941"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.732941"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.747647"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.737647"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.752941"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.751176"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.73"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.761765"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.732941"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.708824"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_asbestos"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["analcatdata_boxing2", 
                    Style[
                    "analcatdata_boxing2", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1339771257][{
                    Key["analcatdata_boxing2"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1339771257][
                   GeneralUtilities`Slice[
                    Key["analcatdata_boxing2"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.45963"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.507778"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.536667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.487407"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.514074"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.479259"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.433333"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.426667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.435926"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.516296"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.541111"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.518148"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.537037"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["analcatdata_boxing2"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Hill_Valley_with_noise", 
                    Style[
                    "Hill_Valley_with_noise", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1339771257][{
                    Key["Hill_Valley_with_noise"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1339771257][
                   GeneralUtilities`Slice[
                    Key["Hill_Valley_with_noise"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.494938"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.511852"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.477325"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.527407"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.488395"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.492593"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.512675"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.506132"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.50358"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.487449"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.483128"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.495226"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.490535"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_with_noise"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Hill_Valley_without_noise", 
                    Style[
                    "Hill_Valley_without_noise", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1339771257][{
                    Key["Hill_Valley_without_noise"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1339771257][
                   GeneralUtilities`Slice[
                    Key["Hill_Valley_without_noise"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.505761"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.496132"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.486049"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.516749"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.500947"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.54284"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.60716"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.595802"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.582181"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.511646"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.501852"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.509547"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.138148"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["Hill_Valley_without_noise"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["lupus", 
                    Style[
                    "lupus", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1339771257][{
                    Key["lupus"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1339771257][
                   GeneralUtilities`Slice[
                    Key["lupus"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.73"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.745556"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.619444"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.749444"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.745"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.747222"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.692222"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.698889"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.656111"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.696111"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.737778"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.715"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.720556"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["lupus"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["prnn_synth", 
                    Style[
                    "prnn_synth", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1339771257][{
                    Key["prnn_synth"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1339771257][
                   GeneralUtilities`Slice[
                    Key["prnn_synth"]]], "Mouse"], 
                 ImageSize -> {{240.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8588"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Nearest Neighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8678"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Gaussian Process"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8466"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Linear SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8576"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["RBF SVM"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8578"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Neural Net"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8576"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["QDA"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8176"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Decision Tree"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8352"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Random Forest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8042"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["AdaBoost"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8404"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Naive Bayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8084"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8438"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Euclide"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8386"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
                  GeneralUtilities`Slice[
                   Key["prnn_synth"], 
                   Key["Bures"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1339771257][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1339771257]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339771257][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1394., {149.5, 156.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.843967153548766*^9, 3.8439694269133215`*^9, 
  3.843971268019754*^9, 3.843973150036373*^9, 3.8439757478837333`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"f51f5a6c-0ecd-4ec7-9dcf-37ac773861a0"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"KetBra", "::", "usage"}], "=", 
   "\"\<|\!\(\*FractionBox[\(x\), \(d - 1\)]\)\[RightAngleBracket]\
\[LeftAngleBracket]\!\(\*FractionBox[\(y\), \(d - 1\)]\)| of \
\!\(\*SuperscriptBox[\(\[DoubleStruckCapitalC]\), \(d\)]\), where x,y\
\[Element]{0,...,d-1} and |0\[RightAngleBracket],|\!\(\*FractionBox[\(1\), \
\(d - 1\)]\)\[RightAngleBracket],...,|1\[RightAngleBracket] are the elements \
of the canonical basis of \!\(\*SuperscriptBox[\(\[DoubleStruckCapitalC]\), \
\(d\)]\)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KetBra", "[", 
    RowBox[{"d_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"SparseArray", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "+", "1"}], ",", 
         RowBox[{"y", "+", "1"}]}], "}"}], "\[Rule]", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "d"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BlochVector", "::", "usage"}], "=", 
   "\"\<BlochVector[\[Rho]], where \[Rho] is a density operator of \
\!\(\*SuperscriptBox[\(\[DoubleStruckCapitalC]\), \(d\)]\) and d\
\[GreaterEqual]2.\n\\n\\t Returns the corresponding Bloch vector \
b\[Element]\!\(\*SuperscriptBox[\(R\), \(\*SuperscriptBox[\(d\), \(2\)] - \
1\)]\).\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BlochVector", "[", "\[Rho]_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d", ",", "sigma"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{
        RowBox[{"Dimensions", "[", "\[Rho]", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sigma", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"sigma", ",", 
          RowBox[{
           RowBox[{"KetBra", "[", 
            RowBox[{"d", ",", "l", ",", "k"}], "]"}], "+", 
           RowBox[{"KetBra", "[", 
            RowBox[{"d", ",", "k", ",", "l"}], "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "0", ",", 
          RowBox[{"d", "-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"l", "+", "1"}], ",", 
          RowBox[{"d", "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"sigma", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"KetBra", "[", 
             RowBox[{"d", ",", "k", ",", "l"}], "]"}]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"KetBra", "[", 
             RowBox[{"d", ",", "l", ",", "k"}], "]"}]}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "0", ",", 
          RowBox[{"d", "-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"l", "+", "1"}], ",", 
          RowBox[{"d", "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"sigma", ",", 
          RowBox[{
           SqrtBox[
            FractionBox["2", 
             RowBox[{"l", 
              RowBox[{"(", 
               RowBox[{"l", "+", "1"}], ")"}]}]]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sum", "[", " ", 
              RowBox[{
               RowBox[{"KetBra", "[", 
                RowBox[{"d", ",", "k", ",", "k"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "0", ",", 
                 RowBox[{"l", "-", "1"}]}], "}"}]}], "]"}], " ", "-", 
             RowBox[{"l", " ", 
              RowBox[{"KetBra", "[", 
               RowBox[{"d", ",", "l", ",", "l"}], "]"}]}]}], ")"}]}]}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1", ",", 
          RowBox[{"d", "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Tr", "[", 
         RowBox[{"\[Rho]", ".", "#"}], "]"}], "&"}], "/@", "sigma"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BlochVectorInverse", "::", "usage"}], "=", 
   "\"\<BlochVectorInverse[b]\n\\n\\t Returns the density operator of \
\!\(\*SuperscriptBox[\(\[DoubleStruckCapitalC]\), \(d\)]\) of the Bloch \
vector b\[Element]\!\(\*SuperscriptBox[\(R\), \(\*SuperscriptBox[\(d\), \
\(2\)] - 1\)]\).\n\\n\\t Not any vector b of the unit hypershpere gives rise \
a density operator,\nsince the output is not a semi-definite positive \
operator (i.e. there exists a negative eigenvalue),\n\\n\\t but all vectors \
of length \[LessSlantEqual]\!\(\*FractionBox[\(\(2\)\(\\\ \)\), \(d\)]\) give \
rise a density operator.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BlochVectorInverse", "[", "b_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d", ",", "sigma", ",", "\[Rho]", ",", "bv"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{"Ceiling", "[", 
        SqrtBox[
         RowBox[{
          RowBox[{"Length", "[", "b", "]"}], "+", "1"}]], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sigma", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"sigma", ",", 
          RowBox[{
           RowBox[{"KetBra", "[", 
            RowBox[{"d", ",", "l", ",", "k"}], "]"}], "+", 
           RowBox[{"KetBra", "[", 
            RowBox[{"d", ",", "k", ",", "l"}], "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "0", ",", 
          RowBox[{"d", "-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"l", "+", "1"}], ",", 
          RowBox[{"d", "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"sigma", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"KetBra", "[", 
             RowBox[{"d", ",", "k", ",", "l"}], "]"}]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"KetBra", "[", 
             RowBox[{"d", ",", "l", ",", "k"}], "]"}]}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "0", ",", 
          RowBox[{"d", "-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"l", "+", "1"}], ",", 
          RowBox[{"d", "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"sigma", ",", 
          RowBox[{
           SqrtBox[
            FractionBox["2", 
             RowBox[{"l", 
              RowBox[{"(", 
               RowBox[{"l", "+", "1"}], ")"}]}]]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sum", "[", " ", 
              RowBox[{
               RowBox[{"KetBra", "[", 
                RowBox[{"d", ",", "k", ",", "k"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "0", ",", 
                 RowBox[{"l", "-", "1"}]}], "}"}]}], "]"}], " ", "-", 
             RowBox[{"l", " ", 
              RowBox[{"KetBra", "[", 
               RowBox[{"d", ",", "l", ",", "l"}], "]"}]}]}], ")"}]}]}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1", ",", 
          RowBox[{"d", "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bv", "=", 
       RowBox[{
        FractionBox["2", "d"], 
        RowBox[{"PadRight", "[", 
         RowBox[{"b", ",", 
          RowBox[{
           RowBox[{"d", "^", "2"}], "-", "1"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", " ", 
      RowBox[{"\[Rho]", "=", 
       RowBox[{
        RowBox[{
         FractionBox["1", "d"], 
         RowBox[{"IdentityMatrix", "[", "d", "]"}]}], "+", 
        RowBox[{
         SqrtBox[
          FractionBox[
           RowBox[{"d", "-", "1"}], 
           RowBox[{"2", " ", "d"}]]], 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"bv", "[", 
             RowBox[{"[", "j", "]"}], "]"}], 
            RowBox[{"sigma", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{
              RowBox[{"d", "^", "2"}], "-", "1"}]}], "}"}]}], "]"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[Rho]", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMEncoder", "::", "usage"}], "=", 
   "\"\<SVMEncoder[x,type], where x\[Element]\!\(\*SuperscriptBox[\(R\), \(d \
- 1\)]\) (keeps the value |x| and normalizes the new vector if type=1).\n\
\\n\\t When type=2, it uses the inverse of the stereographic projection.\n\\n\
\\t Returns the density operator of \!\(\*SuperscriptBox[\(\
\[DoubleStruckCapitalC]\), \(d\)]\),\nwhich is projection-operator (that \
projects over the closed subspace determined by the normalized vector) if \
type is 1 or 2.\n\\n\\t It is a mixed state with the corresponding Bloch \
vector of length \!\(\*FractionBox[\(\(2\)\(\\\ \)\), \(d\)]\) if \
type=3.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMEncoder", "[", 
    RowBox[{"x_", ",", "type_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u", ",", "\[Rho]"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"u", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{"type", ",", "1", ",", 
         RowBox[{"Normalize", "[", 
          RowBox[{"Append", "[", 
           RowBox[{"x", ",", "1"}], "]"}], "]"}], ",", "2", ",", 
         RowBox[{
          FractionBox["2", 
           RowBox[{
            RowBox[{"Total", "[", 
             RowBox[{"x", "^", "2"}], "]"}], "+", "1"}]], 
          RowBox[{"Append", "[", 
           RowBox[{"x", ",", 
            RowBox[{
             FractionBox["1", "2"], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{"x", "^", "2"}], "]"}], "-", "1"}], ")"}]}]}], 
           "]"}]}], ",", "3", ",", 
         RowBox[{"Normalize", "[", 
          RowBox[{"Append", "[", 
           RowBox[{"x", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"type", "\[Equal]", "3"}], " ", ",", 
        RowBox[{"\[Rho]", "=", 
         RowBox[{"BlochVectorInverse", "[", "u", "]"}]}], ",", 
        RowBox[{"\[Rho]", "=", 
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", "u", ",", "u"}], "]"}]}]}], "]"}], ";", 
      RowBox[{"Return", "[", "\[Rho]", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BinaryClassifier", "::", "usage"}], "=", 
   "\"\<BinaryClassifier[DClass1,DClass2],\nwhere DClass1 and DClass2 are \
density operators of the class 1 and 2, respectively. \n\\n\\t Returns the \
projection-operators P+ and P-.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BinaryClassifier", "[", 
    RowBox[{"DClass1_", ",", "DClass2_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "p", ",", "c", ",", "vals", ",", "vecs", ",", "prjs", ",", "prj1", ",", 
       "prj2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p", "=", 
       FractionBox[
        RowBox[{"Length", "[", "DClass1", "]"}], 
        RowBox[{
         RowBox[{"Length", "[", "DClass1", "]"}], "+", 
         RowBox[{"Length", "[", "DClass2", "]"}]}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"c", "=", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"p", " ", 
          RowBox[{"Total", "[", "DClass1", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "p"}], ")"}], 
          RowBox[{"Total", "[", "DClass2", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
       RowBox[{"Eigensystem", "[", "c", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vecs", "=", 
       RowBox[{"Normalize", "/@", "vecs"}]}], ";", 
      RowBox[{"prjs", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", 
           RowBox[{"Conjugate", "[", "#", "]"}], ",", "#"}], "]"}], "&"}], "/@",
         "vecs"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"prj1", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"Pick", "[", 
         RowBox[{"prjs", ",", 
          RowBox[{"NonNegative", "[", "vals", "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"prj2", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"Pick", "[", 
         RowBox[{"prjs", ",", 
          RowBox[{"Negative", "[", "vals", "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"prj1", "\[Equal]", " ", "0"}], ",", 
        RowBox[{
         RowBox[{"prj1", "=", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "[", "vecs", "]"}], ",", 
              RowBox[{"Length", "[", "vecs", "]"}]}], "}"}]}], "]"}]}], ";", 
         RowBox[{"prj2", "=", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"1", ",", 
             RowBox[{"{", 
              RowBox[{"Length", "[", "vecs", "]"}], "}"}]}], "]"}], 
           "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"prj2", "\[Equal]", " ", "0"}], ",", 
        RowBox[{
         RowBox[{"prj2", "=", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "[", "vecs", "]"}], ",", 
              RowBox[{"Length", "[", "vecs", "]"}]}], "}"}]}], "]"}]}], ";", 
         RowBox[{"prj1", "=", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"1", ",", 
             RowBox[{"{", 
              RowBox[{"Length", "[", "vecs", "]"}], "}"}]}], "]"}], 
           "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"prj1", ",", "prj2"}], "}"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HelstromClassify", "::", "usage"}], "=", 
   "\"\<HelstromClassify[{P+,P-},\[Rho]].\n\\n\\t Returns the class 1 or 2.\>\
\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HelstromClassify", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"prj1_", ",", "prj2_"}], "}"}], ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Tr", "[", 
         RowBox[{"prj1", ".", "#"}], "]"}], "\[GreaterEqual]", 
        RowBox[{"Tr", "[", 
         RowBox[{"prj2", ".", "#"}], "]"}]}], ",", "1", " ", ",", "2"}], 
      "]"}], "&"}], "/@", "\[Rho]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"accuracy", "[", 
    RowBox[{"y1_", ",", "y2_"}], "]"}], ":=", 
   RowBox[{"N", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{"y1", ",", "1"}], "]"}], "+", 
      RowBox[{"Count", "[", 
       RowBox[{"y2", ",", "2"}], "]"}]}], 
     RowBox[{
      RowBox[{"Length", "[", "y1", "]"}], "+", 
      RowBox[{"Length", "[", "y2", "]"}]}]], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.8440477044363823`*^9, {3.844047850251422*^9, 3.8440478512846775`*^9}, {
   3.8440479183473473`*^9, 3.8440479214040055`*^9}, {3.8457985458971443`*^9, 
   3.8457985555269976`*^9}, {3.8458038937216797`*^9, 
   3.8458039074129553`*^9}, {3.8458039415532365`*^9, 
   3.8458039472765923`*^9}, {3.845804141356837*^9, 3.8458041697080064`*^9}, {
   3.8458042274300127`*^9, 3.845804260720714*^9}, {3.8458043077761574`*^9, 
   3.8458043195898395`*^9}, {3.845804378887615*^9, 3.8458044166508565`*^9}, {
   3.8458045936668315`*^9, 3.845804631785612*^9}, {3.8458048294923964`*^9, 
   3.845804834630378*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"2ba5c6f5-6e48-408d-833e-7d822e72480a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ITERATIONS", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avg", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataset", "=", 
   RowBox[{"Dataset", "[", 
    RowBox[{
     RowBox[{"ResourceData", "[", "\"\<Sample Data: Larynx Cancer\>\"", "]"}],
      "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scores", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"rs", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "dataset", "]"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{"train", "=", 
     RowBox[{"rs", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"Length", "[", "dataset", "]"}], "*", "0.8"}], "]"}]}], 
       "]"}], "]"}]}], ";", "\n", 
    RowBox[{"test", "=", 
     RowBox[{"rs", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"Length", "[", "dataset", "]"}], "*", "0.8"}], "]"}], "+", 
         "1"}], ";;"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"dsTrain", "=", 
     RowBox[{"dataset", "[", 
      RowBox[{"[", "train", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"dsTest", "=", 
     RowBox[{"dataset", "[", 
      RowBox[{"[", "test", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"trainingset", "=", 
     RowBox[{"Normal", "@", 
      RowBox[{"dsTrain", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", "Association", "]"}], "/*", 
         RowBox[{"Merge", "[", "Identity", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sequence", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Take", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", "5", "}"}]}], "]"}], "&"}], "@", "#"}], 
             "\[Rule]", 
             RowBox[{"Drop", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", "5", "}"}]}], "]"}]}], "&"}], "@", "#"}], "]"}], 
         "&"}]}], "]"}]}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"y", "=", "DeadAlive"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"testset", "=", 
     RowBox[{"Normal", "@", 
      RowBox[{"dsTest", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", "Association", "]"}], "/*", 
         RowBox[{"Merge", "[", "Identity", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sequence", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Take", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", "5", "}"}]}], "]"}], "&"}], "@", "#"}], 
             "\[Rule]", 
             RowBox[{"Drop", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", "5", "}"}]}], "]"}]}], "&"}], "@", "#"}], "]"}], 
         "&"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"score", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"score", "=", 
     RowBox[{"AssociationMap", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"ClassifierMeasurements", "[", 
         RowBox[{
          RowBox[{"Classify", "[", 
           RowBox[{"trainingset", ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<SupportVectorMachine\>\"", ",", 
               RowBox[{"\"\<KernelType\>\"", "\[Rule]", " ", "#"}]}], 
              "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", "testset", ",", 
          " ", "\"\<Accuracy\>\""}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Linear\>\"", ",", "\"\<RadialBasisFunction\>\"", ",", 
         "\"\<Polynomial\>\"", ",", "\"\<Sigmoid\>\""}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"score", ",", 
      RowBox[{"AssociationMap", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"ClassifierMeasurements", "[", 
          RowBox[{
           RowBox[{"Classify", "[", 
            RowBox[{"trainingset", ",", 
             RowBox[{"Method", "\[Rule]", "#"}]}], "]"}], ",", 
           "\[IndentingNewLine]", "testset", ",", " ", "\"\<Accuracy\>\""}], 
          "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<RandomForest\>\"", ",", " ", "\"\<NaiveBayes\>\"", ",", 
          "\"\<NearestNeighbors\>\"", ",", "\"\<LogisticRegression\>\""}], 
         "}"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"X", "=", 
     RowBox[{"Values", "/@", 
      RowBox[{"Values", "@", "trainingset"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"y", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Values", "/@", 
       RowBox[{"Keys", "@", "trainingset"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"X1", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"StringReplace", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\< months\>\"", "\[Rule]", " ", "\"\<\>\""}], ",", 
              RowBox[{"\"\< month\>\"", "\[Rule]", " ", "\"\<\>\""}], ",", 
              RowBox[{"\"\< years\>\"", "\[Rule]", " ", "\"\<\>\""}], ",", 
              RowBox[{"\"\<DateObject[{\>\"", "\[Rule]", " ", "\"\<\>\""}], 
              ",", 
              RowBox[{
              "\"\<}, Year, Gregorian, 2.]\>\"", "\[Rule]", " ", 
               "\"\<\>\""}]}], "}"}]}], "]"}], "&"}], "//@", 
         RowBox[{"ToString", "[", "#", "]"}]}], "&"}], "/@", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Pick", "[", 
          RowBox[{"X", ",", "y", ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "1"}], "]"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"X2", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"StringReplace", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\< months\>\"", "\[Rule]", " ", "\"\<\>\""}], ",", 
              RowBox[{"\"\< month\>\"", "\[Rule]", " ", "\"\<\>\""}], ",", 
              RowBox[{"\"\< years\>\"", "\[Rule]", " ", "\"\<\>\""}], ",", 
              RowBox[{"\"\<DateObject[{\>\"", "\[Rule]", " ", "\"\<\>\""}], 
              ",", 
              RowBox[{
              "\"\<}, Year, Gregorian, 2.]\>\"", "\[Rule]", " ", 
               "\"\<\>\""}]}], "}"}]}], "]"}], "&"}], "//@", 
         RowBox[{"ToString", "[", "#", "]"}]}], "&"}], "/@", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Pick", "[", 
          RowBox[{"X", ",", "y", ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "1"}], "]"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"D1", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"SVMEncoder", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", "X1"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"D2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"SVMEncoder", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", "X2"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2"}], "}"}], "=", 
     RowBox[{"BinaryClassifier", "[", 
      RowBox[{"D1", ",", "D2"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"X", "=", 
     RowBox[{"Values", "/@", 
      RowBox[{"Values", "@", "testset"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"y", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Values", "/@", 
       RowBox[{"Keys", "@", "testset"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"X1", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"StringReplace", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\< months\>\"", "\[Rule]", " ", "\"\<\>\""}], ",", 
              RowBox[{"\"\< month\>\"", "\[Rule]", " ", "\"\<\>\""}], ",", 
              RowBox[{"\"\< years\>\"", "\[Rule]", " ", "\"\<\>\""}], ",", 
              RowBox[{"\"\<DateObject[{\>\"", "\[Rule]", " ", "\"\<\>\""}], 
              ",", 
              RowBox[{
              "\"\<}, Year, Gregorian, 2.]\>\"", "\[Rule]", " ", 
               "\"\<\>\""}]}], "}"}]}], "]"}], "&"}], "//@", 
         RowBox[{"ToString", "[", "#", "]"}]}], "&"}], "/@", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Pick", "[", 
          RowBox[{"X", ",", "y", ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "1"}], "]"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"X2", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"StringReplace", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\< months\>\"", "\[Rule]", " ", "\"\<\>\""}], ",", 
              RowBox[{"\"\< month\>\"", "\[Rule]", " ", "\"\<\>\""}], ",", 
              RowBox[{"\"\< years\>\"", "\[Rule]", " ", "\"\<\>\""}], ",", 
              RowBox[{"\"\<DateObject[{\>\"", "\[Rule]", " ", "\"\<\>\""}], 
              ",", 
              RowBox[{
              "\"\<}, Year, Gregorian, 2.]\>\"", "\[Rule]", " ", 
               "\"\<\>\""}]}], "}"}]}], "]"}], "&"}], "//@", 
         RowBox[{"ToString", "[", "#", "]"}]}], "&"}], "/@", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Pick", "[", 
          RowBox[{"X", ",", "y", ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "1"}], "]"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"D1", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"SVMEncoder", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", "X1"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"D2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"SVMEncoder", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", "X2"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"y1", "=", 
     RowBox[{"HelstromClassify", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2"}], "}"}], ",", "D1"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"y2", "=", 
     RowBox[{"HelstromClassify", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2"}], "}"}], ",", "D2"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"score", ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{"\"\<Helstrom\>\"", "\[Rule]", " ", 
        RowBox[{"accuracy", "[", 
         RowBox[{"y1", ",", "y2"}], "]"}]}], "\[RightAssociation]"}]}], "]"}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"scores", ",", "score"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "ITERATIONS"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"avg", ",", 
    RowBox[{"\"\<LarynxCancer\>\"", "\[Rule]", 
     RowBox[{"Mean", "[", "scores", "]"}]}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.845172856383008*^9, 3.845172878214128*^9}, {
   3.845172942054676*^9, 3.8451729457513456`*^9}, 3.8451934013742485`*^9, {
   3.8451934360724664`*^9, 3.8451934860054893`*^9}, 3.8451935455797033`*^9, 
   3.8451936011274366`*^9, 3.845197494765329*^9, {3.845198063004778*^9, 
   3.8451980668762417`*^9}, {3.8452011545289607`*^9, 
   3.8452011749096403`*^9}, {3.8452012973431044`*^9, 3.845201311274933*^9}, 
   3.845201621267151*^9, {3.845201761215519*^9, 3.845201780579874*^9}, {
   3.8452019693593364`*^9, 3.8452019704293084`*^9}, {3.845202056268906*^9, 
   3.8452021066551065`*^9}, {3.8452022164007144`*^9, 
   3.8452022265116134`*^9}, {3.8452030453627725`*^9, 3.845203138540015*^9}, {
   3.845203236737652*^9, 3.8452032403712816`*^9}, 3.8453445119936795`*^9, {
   3.845745716512392*^9, 3.845745769258419*^9}, {3.845745849823143*^9, 
   3.8457458610521216`*^9}, {3.8457465293546715`*^9, 
   3.8457465295594454`*^9}, {3.845748216777787*^9, 3.84574821695714*^9}, {
   3.8458078271871667`*^9, 3.845807827741114*^9}, {3.8458339221276207`*^9, 
   3.8458339266919603`*^9}},ExpressionUUID->"4b0a1c93-b9d2-4230-afd1-\
fc4dfe361f1e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{
     TagBox["\"\<Sample Data: Liverpool Cancer\>\"",
      #& ,
      BoxID -> "ResourceTag-Sample Data: Liverpool Cancer-Input",
      AutoDelete->True], ",", " ", "\"\<Data\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataset", "=", 
   RowBox[{"Dataset", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "\"\<AnnotationsList\>\"", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataset", "=", 
   RowBox[{"dataset", "[", 
    RowBox[{"All", ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<x\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<y\>\"", "\[Rule]", "2"}], ",", 
       RowBox[{"\"\<type\>\"", "\[Rule]", "3"}]}], "|>"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scores", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"rs", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "dataset", "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"train", "=", 
     RowBox[{"rs", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"Length", "[", "dataset", "]"}], "*", "0.8"}], "]"}]}], 
       "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"test", "=", 
     RowBox[{"rs", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"Length", "[", "dataset", "]"}], "*", "0.8"}], "]"}], "+", 
         "1"}], ";;"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"dsTrain", "=", 
     RowBox[{"dataset", "[", 
      RowBox[{"[", "train", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"dsTest", "=", 
     RowBox[{"dataset", "[", 
      RowBox[{"[", "test", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"trainingset", "=", 
     RowBox[{"Normal", "@", 
      RowBox[{"dsTrain", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", "Association", "]"}], "/*", 
         RowBox[{"Merge", "[", "Identity", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sequence", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Take", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", "3", "}"}]}], "]"}], "&"}], "@", "#"}], 
             "\[Rule]", 
             RowBox[{"Drop", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", "3", "}"}]}], "]"}]}], "&"}], "@", "#"}], "]"}], 
         "&"}]}], "]"}]}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"y", "=", "CaseControl"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"testset", "=", 
     RowBox[{"Normal", "@", 
      RowBox[{"dsTest", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", "Association", "]"}], "/*", 
         RowBox[{"Merge", "[", "Identity", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sequence", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Take", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", "3", "}"}]}], "]"}], "&"}], "@", "#"}], 
             "\[Rule]", 
             RowBox[{"Drop", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", "3", "}"}]}], "]"}]}], "&"}], "@", "#"}], "]"}], 
         "&"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"score", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"score", "=", 
     RowBox[{"AssociationMap", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"ClassifierMeasurements", "[", 
         RowBox[{
          RowBox[{"Classify", "[", 
           RowBox[{"trainingset", ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<SupportVectorMachine\>\"", ",", 
               RowBox[{"\"\<KernelType\>\"", "\[Rule]", " ", "#"}]}], 
              "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", "testset", ",", 
          " ", "\"\<Accuracy\>\""}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Linear\>\"", ",", "\"\<RadialBasisFunction\>\"", ",", 
         "\"\<Polynomial\>\"", ",", "\"\<Sigmoid\>\""}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"score", ",", 
      RowBox[{"AssociationMap", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"ClassifierMeasurements", "[", 
          RowBox[{
           RowBox[{"Classify", "[", 
            RowBox[{"trainingset", ",", 
             RowBox[{"Method", "\[Rule]", "#"}]}], "]"}], ",", 
           "\[IndentingNewLine]", "testset", ",", " ", "\"\<Accuracy\>\""}], 
          "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<RandomForest\>\"", ",", " ", "\"\<NaiveBayes\>\"", ",", 
          "\"\<NearestNeighbors\>\"", ",", "\"\<LogisticRegression\>\""}], 
         "}"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"X", "=", 
     RowBox[{"Values", "/@", 
      RowBox[{"Values", "@", "trainingset"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"y", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Values", "/@", 
       RowBox[{"Keys", "@", "trainingset"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"D1", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"SVMEncoder", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
      RowBox[{"X", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"D2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"SVMEncoder", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
      RowBox[{"X", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2"}], "}"}], "=", 
     RowBox[{"BinaryClassifier", "[", 
      RowBox[{"D1", ",", "D2"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"X", "=", 
     RowBox[{"Values", "/@", 
      RowBox[{"Values", "@", "testset"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"y", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Values", "/@", 
       RowBox[{"Keys", "@", "testset"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"D1", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"SVMEncoder", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
      RowBox[{"X", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"D2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"SVMEncoder", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
      RowBox[{"X", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"y1", "=", 
     RowBox[{"HelstromClassify", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2"}], "}"}], ",", "D1"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"y2", "=", 
     RowBox[{"HelstromClassify", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2"}], "}"}], ",", "D2"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"score", ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{"\"\<Helstrom\>\"", "\[Rule]", " ", 
        RowBox[{"accuracy", "[", 
         RowBox[{"y1", ",", "y2"}], "]"}]}], "\[RightAssociation]"}]}], "]"}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"scores", ",", "score"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "ITERATIONS"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"avg", ",", 
    RowBox[{"\"\<LiverpoolCancer\>\"", "\[Rule]", 
     RowBox[{"Mean", "[", "scores", "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"dsAvg", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"<|", "avg", "|>"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.845738864741494*^9, 3.845738864743642*^9}, {
   3.8457389345349264`*^9, 3.8457389432486897`*^9}, {3.8457391186692843`*^9, 
   3.8457391441705832`*^9}, {3.845739185708463*^9, 3.8457392354512835`*^9}, {
   3.845739310644201*^9, 3.8457394528583074`*^9}, {3.8457394858909144`*^9, 
   3.845739506981617*^9}, {3.8457396025256176`*^9, 3.8457396317589684`*^9}, {
   3.845739811486857*^9, 3.8457398335646725`*^9}, {3.8457398932327023`*^9, 
   3.8457399050131874`*^9}, 3.845739939747188*^9, {3.8457404089899654`*^9, 
   3.845740409828599*^9}, {3.845740461188274*^9, 3.845740462037755*^9}, {
   3.845740608178195*^9, 3.84574062096949*^9}, {3.8457443725152264`*^9, 
   3.845744373558257*^9}, {3.845744408920809*^9, 3.845744424767135*^9}, {
   3.845744455462637*^9, 3.8457444565072136`*^9}, {3.8457445223221674`*^9, 
   3.8457445710155525`*^9}, {3.845744653589876*^9, 3.8457446722535686`*^9}, {
   3.845744746601283*^9, 3.8457447513064213`*^9}, 3.845745506313306*^9, {
   3.8457456210712166`*^9, 3.8457456226250577`*^9}, {3.845745671460882*^9, 
   3.8457456992026844`*^9}, {3.8457459008189163`*^9, 
   3.8457459073883457`*^9}, {3.845746188382574*^9, 3.8457461957608786`*^9}, {
   3.8457462270761194`*^9, 3.8457462472142572`*^9}, {3.8457463531305857`*^9, 
   3.8457463607107363`*^9}, 3.8457471280886526`*^9, {3.845747842151913*^9, 
   3.84574785785563*^9}, {3.8457479029027057`*^9, 3.845747911787617*^9}, 
   3.8457479508264666`*^9, 3.8457481076368265`*^9, {3.845748547938611*^9, 
   3.845748559613387*^9}, 3.845774984581318*^9, {3.8457756295067787`*^9, 
   3.845775636673255*^9}, {3.8457757956381683`*^9, 3.845775804142582*^9}, {
   3.8457758499501233`*^9, 3.8457758577368393`*^9}, {3.8457763157654877`*^9, 
   3.845776330981311*^9}, 3.8458029823015995`*^9, {3.8458031945196686`*^9, 
   3.8458032048343515`*^9}, {3.8458044424150486`*^9, 3.845804452210042*^9}, {
   3.8458047402168617`*^9, 3.845804759951082*^9}, {3.845804871055296*^9, 
   3.845804900203107*^9}, {3.8458049318853097`*^9, 3.845804946720586*^9}, {
   3.8458050199312906`*^9, 3.845805027783264*^9}, {3.8458065524912643`*^9, 
   3.8458065871409235`*^9}, {3.845806677743134*^9, 3.8458066908304396`*^9}, {
   3.845806782985984*^9, 3.8458067983058577`*^9}, {3.845806912761613*^9, 
   3.845806915789113*^9}, {3.8458069465477023`*^9, 3.845806946739216*^9}, {
   3.8458070183345976`*^9, 3.8458070329289417`*^9}, 3.8458072007314787`*^9, {
   3.8458078200651345`*^9, 3.845807821183628*^9}, {3.8458078917783976`*^9, 
   3.8458078929483566`*^9}, {3.8458081274174657`*^9, 3.845808141647792*^9}, {
   3.84580834622933*^9, 3.8458083802672396`*^9}, {3.8458339012995014`*^9, 
   3.845833913758262*^9}},ExpressionUUID->"20f0e35a-b7f4-4579-88f4-\
d6c3d18cd2e6"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "Linear", "RadialBasisFunction", "Polynomial", "Sigmoid", 
            "RandomForest", "NaiveBayes", "NearestNeighbors", 
            "LogisticRegression", "Helstrom"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 2], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "Linear"} -> 
           1, {All, "RadialBasisFunction"} -> 1, {All, "Polynomial"} -> 
           1, {All, "Sigmoid"} -> 1, {All, "RandomForest"} -> 
           1, {All, "NaiveBayes"} -> 1, {All, "NearestNeighbors"} -> 
           1, {All, "LogisticRegression"} -> 1, {All, "Helstrom"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[144.00000000000003`], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "Linear" -> TypeSystem`PackageScope`AtomShape[60], 
               "RadialBasisFunction" -> TypeSystem`PackageScope`AtomShape[60],
                "Polynomial" -> TypeSystem`PackageScope`AtomShape[60], 
               "Sigmoid" -> TypeSystem`PackageScope`AtomShape[60], 
               "RandomForest" -> TypeSystem`PackageScope`AtomShape[60], 
               "NaiveBayes" -> TypeSystem`PackageScope`AtomShape[60], 
               "NearestNeighbors" -> TypeSystem`PackageScope`AtomShape[60], 
               "LogisticRegression" -> TypeSystem`PackageScope`AtomShape[60], 
               "Helstrom" -> TypeSystem`PackageScope`AtomShape[60]]]]], 
           2, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1743829852], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "Linear", "RadialBasisFunction", "Polynomial", "Sigmoid", 
            "RandomForest", "NaiveBayes", "NearestNeighbors", 
            "LogisticRegression", "Helstrom"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 2], "HandleQ" -> True, "RowTarget" -> 20,
         "Data" -> TypeSystem`PackageScope`CacheHandle[1743829852]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1089708099][{All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Linear\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Linear\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1089708099][{All, "Linear"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[All, "Linear"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"RadialBasisFunction\"", FontColor -> GrayLevel[0.4]]],
                     {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"RadialBasisFunction\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1089708099][{All, "RadialBasisFunction"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[All, "RadialBasisFunction"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Polynomial\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Polynomial\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1089708099][{All, "Polynomial"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[All, "Polynomial"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Sigmoid\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Sigmoid\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1089708099][{All, "Sigmoid"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[All, "Sigmoid"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"RandomForest\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"RandomForest\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1089708099][{All, "RandomForest"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[All, "RandomForest"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"NaiveBayes\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"NaiveBayes\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1089708099][{All, "NaiveBayes"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[All, "NaiveBayes"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"NearestNeighbors\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"NearestNeighbors\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1089708099][{All, "NearestNeighbors"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[All, "NearestNeighbors"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LogisticRegression\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LogisticRegression\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1089708099][{All, "LogisticRegression"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[All, "LogisticRegression"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Helstrom\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Helstrom\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1089708099][{All, "Helstrom"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[All, "Helstrom"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["LarynxCancer", 
                    Style[
                    "LarynxCancer", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1089708099][{
                    Key["LarynxCancer"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1089708099][
                   GeneralUtilities`Slice[
                    Key["LarynxCancer"]]], "Mouse"], 
                 ImageSize -> {{144.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.965"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[
                   Key["LarynxCancer"], 
                   Key["Linear"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.928333"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[
                   Key["LarynxCancer"], 
                   Key["RadialBasisFunction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.93"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[
                   Key["LarynxCancer"], 
                   Key["Polynomial"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.888333"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[
                   Key["LarynxCancer"], 
                   Key["Sigmoid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.791111"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[
                   Key["LarynxCancer"], 
                   Key["RandomForest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.712222"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[
                   Key["LarynxCancer"], 
                   Key["NaiveBayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.747778"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[
                   Key["LarynxCancer"], 
                   Key["NearestNeighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.946667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[
                   Key["LarynxCancer"], 
                   Key["LogisticRegression"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.52"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[
                   Key["LarynxCancer"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["LiverpoolCancer", 
                    Style[
                    "LiverpoolCancer", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1089708099][{
                    Key["LiverpoolCancer"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1089708099][
                   GeneralUtilities`Slice[
                    Key["LiverpoolCancer"]]], "Mouse"], 
                 ImageSize -> {{144.00000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.799501"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[
                   Key["LiverpoolCancer"], 
                   Key["Linear"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.799501"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[
                   Key["LiverpoolCancer"], 
                   Key["RadialBasisFunction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.799501"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[
                   Key["LiverpoolCancer"], 
                   Key["Polynomial"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.790197"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[
                   Key["LiverpoolCancer"], 
                   Key["Sigmoid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.769658"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[
                   Key["LiverpoolCancer"], 
                   Key["RandomForest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.799001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[
                   Key["LiverpoolCancer"], 
                   Key["NaiveBayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.799606"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[
                   Key["LiverpoolCancer"], 
                   Key["NearestNeighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.799501"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[
                   Key["LiverpoolCancer"], 
                   Key["LogisticRegression"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.637017"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
                  GeneralUtilities`Slice[
                   Key["LiverpoolCancer"], 
                   Key["Helstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1089708099][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1089708099]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1089708099][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1030., {45.5, 52.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.8458334815533047`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"c876f172-b7c3-4f18-a2c9-8580e04132dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BALANCED", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ds", "=", 
   RowBox[{"Dataset", "[", 
    RowBox[{
     RowBox[{
     "ResourceData", "[", "\"\<Sample Data: Esophageal Cancer\>\"", "]"}], 
     "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ds", "=", 
   RowBox[{"ds", "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#\"NumberOfCases\"", "\[Equal]", "0"}], " ", "&&", " ", 
         RowBox[{"#\"NumberOfControls\"", "<", "6"}]}], ",", 
        RowBox[{"<|", 
         RowBox[{"#", ",", 
          RowBox[{"\"\<NumberOfCases\>\"", "\[Rule]", 
           RowBox[{"-", "1"}]}]}], "|>"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"#\"NumberOfCases\"", "\[GreaterEqual]", " ", "5"}], ",", 
          RowBox[{"<|", 
           RowBox[{"#", ",", 
            RowBox[{"\"\<NumberOfCases\>\"", "\[Rule]", "5"}]}], "|>"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#\"NumberOfCases\"", "\[Equal]", " ", "3"}], ",", 
            RowBox[{"<|", 
             RowBox[{"#", ",", 
              RowBox[{"\"\<NumberOfCases\>\"", "\[Rule]", "4"}]}], "|>"}], 
            ",", "#"}], "]"}]}], "]"}]}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scores", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"rs", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "ds", "]"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{"train", "=", 
     RowBox[{"rs", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"Length", "[", "ds", "]"}], "*", "0.8"}], "]"}]}], "]"}], 
      "]"}]}], ";", "\n", 
    RowBox[{"test", "=", 
     RowBox[{"rs", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"Length", "[", "ds", "]"}], "*", "0.8"}], "]"}], "+", 
         "1"}], ";;"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"dsTrain", "=", 
     RowBox[{"ds", "[", 
      RowBox[{"[", "train", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"dsTest", "=", 
     RowBox[{"ds", "[", 
      RowBox[{"[", "test", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"trainingset", "=", 
     RowBox[{"Normal", "@", 
      RowBox[{"dsTrain", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", "Association", "]"}], "/*", 
         RowBox[{"Merge", "[", "Identity", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sequence", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Take", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", "4", "}"}]}], "]"}], "&"}], "@", "#"}], 
             "\[Rule]", 
             RowBox[{"Drop", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", "4", "}"}]}], "]"}]}], "&"}], "@", "#"}], "]"}], 
         "&"}]}], "]"}]}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"y", "=", 
      RowBox[{"Zero", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"controls", "<", "5"}], ",", 
          RowBox[{"more", " ", "checks"}]}], ")"}], "/", "Few"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", ",", "2", ",", 
          RowBox[{"3", " ", "or", " ", "4"}]}], ")"}], "/", "SeveralCases"}], 
       RowBox[{"(", 
        RowBox[{"\[GreaterEqual]", "5"}], ")"}]}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"testset", "=", 
     RowBox[{"Normal", "@", 
      RowBox[{"dsTest", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", "Association", "]"}], "/*", 
         RowBox[{"Merge", "[", "Identity", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sequence", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Take", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", "4", "}"}]}], "]"}], "&"}], "@", "#"}], 
             "\[Rule]", 
             RowBox[{"Drop", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", "4", "}"}]}], "]"}]}], "&"}], "@", "#"}], "]"}], 
         "&"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"score", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"score", "=", 
     RowBox[{"AssociationMap", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"ClassifierMeasurements", "[", 
         RowBox[{
          RowBox[{"Classify", "[", 
           RowBox[{"trainingset", ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<SupportVectorMachine\>\"", ",", 
               RowBox[{"\"\<KernelType\>\"", "\[Rule]", " ", "#"}]}], 
              "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", "testset", ",", 
          " ", "\"\<Accuracy\>\""}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Linear\>\"", ",", "\"\<RadialBasisFunction\>\"", ",", 
         "\"\<Polynomial\>\"", ",", "\"\<Sigmoid\>\""}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"score", ",", 
      RowBox[{"AssociationMap", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"ClassifierMeasurements", "[", 
          RowBox[{
           RowBox[{"Classify", "[", 
            RowBox[{"trainingset", ",", 
             RowBox[{"Method", "\[Rule]", "#"}]}], "]"}], ",", 
           "\[IndentingNewLine]", "testset", ",", " ", "\"\<Accuracy\>\""}], 
          "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<RandomForest\>\"", ",", " ", "\"\<NaiveBayes\>\"", ",", 
          "\"\<NearestNeighbors\>\"", ",", "\"\<LogisticRegression\>\""}], 
         "}"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"X", "=", 
     RowBox[{"Values", "/@", 
      RowBox[{"Values", "@", "trainingset"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"y", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Values", "/@", 
       RowBox[{"Keys", "@", "trainingset"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"b", "=", 
     RowBox[{"{", 
      RowBox[{"b1", ",", "b2", ",", "b3", ",", "b4", ",", "b5"}], "}"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"d", "=", 
     RowBox[{"Ceiling", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"Length", "[", "b", "]"}], "+", "1"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lenX", "=", 
     RowBox[{"Total", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"Length", ",", "X"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"p", "=", 
     RowBox[{"If", "[", 
      RowBox[{"BALANCED", ",", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"Length", "[", "X", "]"}]], 
        RowBox[{"Table", "[", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"Length", "[", 
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "lenX"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"bCentroids", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"2", " "}], "d"], 
        RowBox[{"Mean", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Normalize", "[", 
             RowBox[{"Append", "[", 
              RowBox[{"#", ",", "1"}], "]"}], "]"}], "&"}], "/@", 
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"pCentroids", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", 
         RowBox[{"[", "i", "]"}], "]"}], 
        RowBox[{"BlochVectorInverse", "[", 
         RowBox[{"bCentroids", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"S", "=", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{
       RowBox[{
        SqrtBox[
         FractionBox["1", "#"]], "&"}], "/@", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"Total", "[", "pCentroids", "]"}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"POVM", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"S", ".", "#", ".", "S"}], "&"}], "/@", "pCentroids"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Xtest", "=", 
     RowBox[{"Values", "/@", 
      RowBox[{"Values", "@", "testset"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ytest", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Values", "/@", 
       RowBox[{"Keys", "@", "testset"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"prob", "=", 
     RowBox[{"Map", "[", 
      RowBox[{"Transpose", ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"Tr", "[", 
             RowBox[{"#", ".", 
              RowBox[{"POVM", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
          RowBox[{"Map", "[", 
           RowBox[{"BlochVectorInverse", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"2", " "}], "d"], 
               RowBox[{"Normalize", "[", 
                RowBox[{"Append", "[", 
                 RowBox[{"#", ",", "1"}], "]"}], "]"}]}], "&"}], "/@", 
             RowBox[{"Xtest", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "Xtest", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"pred", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "[", 
        RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Ordering", "[", 
            RowBox[{"#", ",", 
             RowBox[{"-", "1"}]}], "]"}], "&"}], "/@", 
          RowBox[{"prob", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "Xtest", "]"}]}], "}"}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"score", ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{"\"\<PrettyGood\>\"", "\[Rule]", " ", 
        RowBox[{"N", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"pred", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"ytest", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "Xtest", "]"}]}], "}"}]}], "]"}], " "}], 
          RowBox[{"Total", "[", 
           RowBox[{"Map", "[", 
            RowBox[{"Length", ",", "Xtest"}], "]"}], "]"}]], "]"}]}], 
       "\[RightAssociation]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"eqns", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"p", "[", 
          RowBox[{"[", "i", "]"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"a", "-", 
           RowBox[{
            RowBox[{"bCentroids", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ".", "b"}], "-", 
           RowBox[{
            FractionBox[
             RowBox[{"p", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "2"], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               RowBox[{"Norm", "[", 
                RowBox[{"bCentroids", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], "^", "2"}]}], 
             ")"}]}]}], ")"}]}], "\[Equal]", 
        RowBox[{
         RowBox[{"a", "^", "2"}], "-", 
         RowBox[{"b", ".", "b"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"sols", "=", 
     RowBox[{"Values", "/@", 
      RowBox[{"Solve", "[", 
       RowBox[{"eqns", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b1", ",", "b2", ",", "b3", ",", "b4", ",", "b5"}],
          "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"gamma", "=", 
     RowBox[{
      RowBox[{"sols", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", 
      RowBox[{"sols", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", 
         RowBox[{"2", ";;"}]}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"nCentroids", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Normalize", "[", 
        RowBox[{
         RowBox[{"bCentroids", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", "gamma"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"prob", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"nCentroids", ".", 
         RowBox[{"Transpose", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"2", " "}], "d"], 
             RowBox[{"Normalize", "[", 
              RowBox[{"Append", "[", 
               RowBox[{"#", ",", "1"}], "]"}], "]"}]}], "&"}], "/@", 
           RowBox[{"Xtest", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "Xtest", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"pred", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "[", 
        RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Ordering", "[", 
            RowBox[{"#", ",", 
             RowBox[{"-", "1"}]}], "]"}], "&"}], "/@", 
          RowBox[{"prob", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "Xtest", "]"}]}], "}"}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"score", ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{"\"\<GeometricHelstrom\>\"", "\[Rule]", " ", 
        RowBox[{"N", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"pred", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"ytest", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "Xtest", "]"}]}], "}"}]}], "]"}], " "}], 
          RowBox[{"Total", "[", 
           RowBox[{"Map", "[", 
            RowBox[{"Length", ",", "Xtest"}], "]"}], "]"}]], "]"}]}], 
       "\[RightAssociation]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"scores", ",", "score"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "ITERATIONS"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"dsMean", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"<|", 
    RowBox[{"\"\<EsophagealCancer\>\"", "\[Rule]", 
     RowBox[{"Mean", "[", "scores", "]"}]}], "|>"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8393411353465047`*^9, 3.839341135352516*^9}, {
   3.839341453192892*^9, 3.839341610051963*^9}, {3.8393417084665117`*^9, 
   3.839341716371359*^9}, 3.8393424896294155`*^9, {3.839347485258635*^9, 
   3.839347504195881*^9}, {3.839347968403338*^9, 3.8393479734402375`*^9}, {
   3.839349017119636*^9, 3.83934902598514*^9}, {3.8393532389714465`*^9, 
   3.839353248294139*^9}, {3.8393533112143445`*^9, 3.8393533598395534`*^9}, {
   3.839353434119377*^9, 3.839353490439607*^9}, {3.8393535486295447`*^9, 
   3.8393535621560273`*^9}, {3.8393535990201874`*^9, 
   3.8393536166920476`*^9}, {3.8393536714260902`*^9, 3.8393536734928217`*^9}, 
   3.8393537742988005`*^9, {3.839353840327831*^9, 3.839353858181242*^9}, 
   3.8393581726568856`*^9, {3.845202288310523*^9, 3.8452023239571915`*^9}, {
   3.8452032608679123`*^9, 3.845203315400466*^9}, 3.8452156815353527`*^9, {
   3.8452157133297405`*^9, 3.8452158308292913`*^9}, {3.845215870421667*^9, 
   3.8452158943514643`*^9}, {3.8452159289263473`*^9, 
   3.8452159473733835`*^9}, {3.8452160799909515`*^9, 3.845216151188328*^9}, {
   3.845216250325716*^9, 3.8452162861068306`*^9}, {3.8453594961850367`*^9, 
   3.8453596275652456`*^9}, {3.8453596720515857`*^9, 3.845359757195404*^9}, {
   3.845359850008003*^9, 3.8453598688742356`*^9}, {3.845359931305375*^9, 
   3.8453600248115797`*^9}, {3.8453600607311172`*^9, 3.8453600779394073`*^9}, 
   3.845362583949619*^9, {3.845372736350445*^9, 3.845372753386984*^9}, {
   3.8453728010993557`*^9, 3.8453728198889713`*^9}, 3.845373019891326*^9, {
   3.8453733944681168`*^9, 3.845373396864851*^9}, {3.8453739476342697`*^9, 
   3.8453739493063927`*^9}, 3.845373993004886*^9, 3.845388669220885*^9, 
   3.845388801216619*^9, {3.8453889167460575`*^9, 3.8453889261596766`*^9}, {
   3.8453889624260635`*^9, 3.845388963347905*^9}, {3.8453898609604*^9, 
   3.8453898618206635`*^9}, {3.8453952823726225`*^9, 
   3.8453953072870874`*^9}, {3.8453953948816104`*^9, 
   3.8453954030490513`*^9}, {3.8453955034482183`*^9, 3.845395524166298*^9}, {
   3.845395559023619*^9, 3.845395571397231*^9}, {3.8453956096790795`*^9, 
   3.8453956404379225`*^9}, {3.8456119077420173`*^9, 3.8456119121532784`*^9}, 
   3.8456119999580345`*^9, {3.8456121981561594`*^9, 3.8456122000074053`*^9}, {
   3.8456122404506226`*^9, 3.845612265916854*^9}, {3.8456123007705812`*^9, 
   3.8456123037551775`*^9}, {3.845691253077984*^9, 3.845691272352778*^9}, {
   3.845693531027317*^9, 3.8456935750746317`*^9}, {3.8456937205845785`*^9, 
   3.845693728980926*^9}, 3.845695302010296*^9, {3.845696015593537*^9, 
   3.8456960179879136`*^9}, {3.845700452566098*^9, 3.8457005088028345`*^9}, {
   3.8457005412180862`*^9, 3.845700666120118*^9}, {3.8457008627035756`*^9, 
   3.845700867813747*^9}, {3.845701075529301*^9, 3.84570107572169*^9}, {
   3.8457013677776413`*^9, 3.845701381740116*^9}, {3.8457014725625515`*^9, 
   3.845701499717535*^9}, 3.8457019026988945`*^9, {3.845703920229691*^9, 
   3.8457039273912554`*^9}, {3.845704298521349*^9, 3.8457044303405647`*^9}, {
   3.8457044616510005`*^9, 3.845704505370326*^9}, {3.8457046012703123`*^9, 
   3.8457046014505434`*^9}, 3.8457046484628963`*^9, {3.8457047335339565`*^9, 
   3.845704734477242*^9}, 3.845712774544805*^9, {3.8457303762158623`*^9, 
   3.845730380124426*^9}, {3.8457304547665324`*^9, 3.8457304557502704`*^9}, {
   3.8457353868098216`*^9, 3.845735398347823*^9}, {3.8457357242792425`*^9, 
   3.845735727199667*^9}, {3.845735794249219*^9, 3.8457357944297314`*^9}, {
   3.8457358256209764`*^9, 3.8457358271044474`*^9}, {3.8458062288627777`*^9, 
   3.845806229092808*^9}, {3.845806522467803*^9, 3.8458065226273117`*^9}, {
   3.8458067265646043`*^9, 3.845806728809873*^9}, {3.845806958065997*^9, 
   3.8458069753247347`*^9}, 3.8458081684045453`*^9, {3.8458082922429132`*^9, 
   3.8458083024338694`*^9}, {3.845833661079841*^9, 3.845833689178405*^9}, 
   3.845833739506044*^9},ExpressionUUID->"efc8dd77-ab84-489c-83a0-\
2775fef9c244"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Assoc[
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "GeometricHelstrom", "Linear", "LogisticRegression", "NaiveBayes",
              "NearestNeighbors", "Polynomial", "PrettyGood", 
             "RadialBasisFunction", "RandomForest", "Sigmoid"]], 
           TypeSystem`Atom[Real], 10], 1], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[153.60000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
               TypeSystem`PackageScope`AtomShape[171.], 
               TypeSystem`PackageScope`AtomShape[60]]], 10, {All}]]], 1, {}], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1480175770], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Assoc[
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "GeometricHelstrom", "Linear", "LogisticRegression", "NaiveBayes",
              "NearestNeighbors", "Polynomial", "PrettyGood", 
             "RadialBasisFunction", "RandomForest", "Sigmoid"]], 
           TypeSystem`Atom[Real], 10], 1], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1480175770]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["EsophagealCancer", 
                    Style[
                    "EsophagealCancer", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1026244601][{
                    Key["EsophagealCancer"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1026244601][
                   GeneralUtilities`Slice[
                    Key["EsophagealCancer"]]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Linear", 
                    Style[
                    "Linear", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1026244601][{
                    Key["EsophagealCancer"], 
                    Key["Linear"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1026244601][
                   GeneralUtilities`Slice[
                    Key["EsophagealCancer"], 
                    Key["Linear"]]], "Mouse"], 
                 ImageSize -> {{171., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.293333"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026244601][
                  GeneralUtilities`Slice[
                   Key["EsophagealCancer"], 
                   Key["Linear"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["RadialBasisFunction", 
                    Style[
                    "RadialBasisFunction", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1026244601][{
                    Key["EsophagealCancer"], 
                    Key["RadialBasisFunction"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1026244601][
                   GeneralUtilities`Slice[
                    Key["EsophagealCancer"], 
                    Key["RadialBasisFunction"]]], "Mouse"], 
                 ImageSize -> {{171., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.238333"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026244601][
                  GeneralUtilities`Slice[
                   Key["EsophagealCancer"], 
                   Key["RadialBasisFunction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Polynomial", 
                    Style[
                    "Polynomial", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1026244601][{
                    Key["EsophagealCancer"], 
                    Key["Polynomial"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1026244601][
                   GeneralUtilities`Slice[
                    Key["EsophagealCancer"], 
                    Key["Polynomial"]]], "Mouse"], 
                 ImageSize -> {{171., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.236667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026244601][
                  GeneralUtilities`Slice[
                   Key["EsophagealCancer"], 
                   Key["Polynomial"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Sigmoid", 
                    Style[
                    "Sigmoid", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1026244601][{
                    Key["EsophagealCancer"], 
                    Key["Sigmoid"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1026244601][
                   GeneralUtilities`Slice[
                    Key["EsophagealCancer"], 
                    Key["Sigmoid"]]], "Mouse"], 
                 ImageSize -> {{171., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.218333"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026244601][
                  GeneralUtilities`Slice[
                   Key["EsophagealCancer"], 
                   Key["Sigmoid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["RandomForest", 
                    Style[
                    "RandomForest", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1026244601][{
                    Key["EsophagealCancer"], 
                    Key["RandomForest"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1026244601][
                   GeneralUtilities`Slice[
                    Key["EsophagealCancer"], 
                    Key["RandomForest"]]], "Mouse"], 
                 ImageSize -> {{171., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.493889"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026244601][
                  GeneralUtilities`Slice[
                   Key["EsophagealCancer"], 
                   Key["RandomForest"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["NaiveBayes", 
                    Style[
                    "NaiveBayes", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1026244601][{
                    Key["EsophagealCancer"], 
                    Key["NaiveBayes"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1026244601][
                   GeneralUtilities`Slice[
                    Key["EsophagealCancer"], 
                    Key["NaiveBayes"]]], "Mouse"], 
                 ImageSize -> {{171., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.457222"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026244601][
                  GeneralUtilities`Slice[
                   Key["EsophagealCancer"], 
                   Key["NaiveBayes"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["NearestNeighbors", 
                    Style[
                    "NearestNeighbors", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1026244601][{
                    Key["EsophagealCancer"], 
                    Key["NearestNeighbors"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1026244601][
                   GeneralUtilities`Slice[
                    Key["EsophagealCancer"], 
                    Key["NearestNeighbors"]]], "Mouse"], 
                 ImageSize -> {{171., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.241667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026244601][
                  GeneralUtilities`Slice[
                   Key["EsophagealCancer"], 
                   Key["NearestNeighbors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["LogisticRegression", 
                    Style[
                    "LogisticRegression", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1026244601][{
                    Key["EsophagealCancer"], 
                    Key["LogisticRegression"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1026244601][
                   GeneralUtilities`Slice[
                    Key["EsophagealCancer"], 
                    Key["LogisticRegression"]]], "Mouse"], 
                 ImageSize -> {{171., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.347222"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026244601][
                  GeneralUtilities`Slice[
                   Key["EsophagealCancer"], 
                   Key["LogisticRegression"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["PrettyGood", 
                    Style[
                    "PrettyGood", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1026244601][{
                    Key["EsophagealCancer"], 
                    Key["PrettyGood"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1026244601][
                   GeneralUtilities`Slice[
                    Key["EsophagealCancer"], 
                    Key["PrettyGood"]]], "Mouse"], 
                 ImageSize -> {{171., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.336111"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026244601][
                  GeneralUtilities`Slice[
                   Key["EsophagealCancer"], 
                   Key["PrettyGood"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["GeometricHelstrom", 
                    Style[
                    "GeometricHelstrom", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1026244601][{
                    Key["EsophagealCancer"], 
                    Key["GeometricHelstrom"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1026244601][
                   GeneralUtilities`Slice[
                    Key["EsophagealCancer"], 
                    Key["GeometricHelstrom"]]], "Mouse"], 
                 ImageSize -> {{171., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026244601][
                  GeneralUtilities`Slice[
                   Key["EsophagealCancer"], 
                   Key["GeometricHelstrom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1026244601][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1026244601]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026244601][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026244601][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {419., {136.5, 143.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.8457047769516597`*^9, 3.8457304891857862`*^9, 
  3.845735746046296*^9, 3.8457369159439*^9, 3.845812848544899*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"e98ac732-7f38-4f9d-949d-99e47762a06b"]
}, Open  ]]
},
WindowSize->{2178, 1151},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1209, 26, 99, "Input",ExpressionUUID->"273655d8-8287-4ae9-8f2c-72f063a24896"],
Cell[1792, 50, 633, 8, 36, "Output",ExpressionUUID->"7908cea5-9d7c-44a9-8871-1fa37d96f74f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2462, 63, 11200, 247, 2807, "ExternalLanguage",ExpressionUUID->"77899e36-27ba-4b5e-aefb-28cb1af4791b"],
Cell[13665, 312, 109714, 2289, 327, "Output",ExpressionUUID->"1dff7f8e-559d-4a5e-9b60-ceb7df1c28d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123416, 2606, 26666, 469, 4175, "ExternalLanguage",ExpressionUUID->"7cfb8977-197e-4c4b-922a-0b311ac081a5"],
Cell[150085, 3077, 97392, 2033, 327, "Output",ExpressionUUID->"f51f5a6c-0ecd-4ec7-9dcf-37ac773861a0"]
}, Open  ]],
Cell[247492, 5113, 16743, 439, 1477, "Input",ExpressionUUID->"2ba5c6f5-6e48-408d-833e-7d822e72480a"],
Cell[264238, 5554, 12659, 323, 759, "Input",ExpressionUUID->"4b0a1c93-b9d2-4230-afd1-fc4dfe361f1e"],
Cell[CellGroupData[{
Cell[276922, 5881, 11302, 276, 693, "Input",ExpressionUUID->"20f0e35a-b7f4-4579-88f4-d6c3d18cd2e6"],
Cell[288227, 6159, 35616, 711, 119, "Output",ExpressionUUID->"c876f172-b7c3-4f18-a2c9-8580e04132dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323880, 6875, 20580, 520, 1115, "Input",ExpressionUUID->"efc8dd77-ab84-489c-83a0-2775fef9c244"],
Cell[344463, 7397, 27901, 537, 301, "Output",ExpressionUUID->"e98ac732-7f38-4f9d-949d-99e47762a06b"]
}, Open  ]]
}
]
*)

